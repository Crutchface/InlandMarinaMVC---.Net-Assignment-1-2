// <auto-generated />
using System;
using InlandData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InlandData.Migrations
{
    [DbContext(typeof(InlandContext))]
    [Migration("20241210162545_passwordhash5")]
    partial class passwordhash5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InlandData.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            City = "Los Angeles",
                            FirstName = "John",
                            LastName = "Smith",
                            Phone = "3234567890"
                        },
                        new
                        {
                            CustomerId = 2,
                            City = "San Francisco",
                            FirstName = "Emily",
                            LastName = "Johnson",
                            Phone = "4152345678"
                        },
                        new
                        {
                            CustomerId = 3,
                            City = "San Diego",
                            FirstName = "David",
                            LastName = "Brown",
                            Phone = "8581234567"
                        },
                        new
                        {
                            CustomerId = 4,
                            City = "Sacramento",
                            FirstName = "Jessica",
                            LastName = "Davis",
                            Phone = "9162345678"
                        },
                        new
                        {
                            CustomerId = 5,
                            City = "Fresno",
                            FirstName = "Michael",
                            LastName = "Miller",
                            Phone = "5593456789"
                        },
                        new
                        {
                            CustomerId = 6,
                            City = "Phoenix",
                            FirstName = "Sarah",
                            LastName = "Wilson",
                            Phone = "6022345678"
                        },
                        new
                        {
                            CustomerId = 7,
                            City = "Tucson",
                            FirstName = "Daniel",
                            LastName = "Moore",
                            Phone = "5203456789"
                        },
                        new
                        {
                            CustomerId = 8,
                            City = "Mesa",
                            FirstName = "Olivia",
                            LastName = "Taylor",
                            Phone = "4804567890"
                        },
                        new
                        {
                            CustomerId = 9,
                            City = "Chandler",
                            FirstName = "Matthew",
                            LastName = "Anderson",
                            Phone = "4805678901"
                        },
                        new
                        {
                            CustomerId = 10,
                            City = "Scottsdale",
                            FirstName = "Sophia",
                            LastName = "Thomas",
                            Phone = "6026789012"
                        },
                        new
                        {
                            CustomerId = 11,
                            City = "Las Vegas",
                            FirstName = "James",
                            LastName = "Jackson",
                            Phone = "7027890123"
                        },
                        new
                        {
                            CustomerId = 12,
                            City = "Reno",
                            FirstName = "Isabella",
                            LastName = "White",
                            Phone = "7758901234"
                        },
                        new
                        {
                            CustomerId = 13,
                            City = "Henderson",
                            FirstName = "Alexander",
                            LastName = "Harris",
                            Phone = "7029012345"
                        },
                        new
                        {
                            CustomerId = 14,
                            City = "Carson City",
                            FirstName = "Ava",
                            LastName = "Martin",
                            Phone = "7752345678"
                        },
                        new
                        {
                            CustomerId = 15,
                            City = "Elko",
                            FirstName = "Ethan",
                            LastName = "Garcia",
                            Phone = "7023456789"
                        },
                        new
                        {
                            CustomerId = 16,
                            City = "Salt Lake City",
                            FirstName = "Charlotte",
                            LastName = "Lee",
                            Phone = "8012345678"
                        },
                        new
                        {
                            CustomerId = 17,
                            City = "Provo",
                            FirstName = "Henry",
                            LastName = "Perez",
                            Phone = "3853456789"
                        },
                        new
                        {
                            CustomerId = 18,
                            City = "Ogden",
                            FirstName = "Amelia",
                            LastName = "Martinez",
                            Phone = "8014567890"
                        },
                        new
                        {
                            CustomerId = 19,
                            City = "St. George",
                            FirstName = "Benjamin",
                            LastName = "Rodriguez",
                            Phone = "4355678901"
                        },
                        new
                        {
                            CustomerId = 20,
                            City = "West Valley City",
                            FirstName = "Grace",
                            LastName = "Gonzalez",
                            Phone = "3856789012"
                        });
                });

            modelBuilder.Entity("InlandData.Dock", b =>
                {
                    b.Property<int>("DockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DockId"));

                    b.Property<bool>("ElectricalService")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("WaterService")
                        .HasColumnType("bit");

                    b.HasKey("DockId");

                    b.ToTable("Docks");

                    b.HasData(
                        new
                        {
                            DockId = 1,
                            ElectricalService = true,
                            Name = "Seabreeze Cove",
                            WaterService = true
                        },
                        new
                        {
                            DockId = 2,
                            ElectricalService = false,
                            Name = "Sunset Haven",
                            WaterService = true
                        },
                        new
                        {
                            DockId = 3,
                            ElectricalService = false,
                            Name = "Whispering Pines",
                            WaterService = false
                        });
                });

            modelBuilder.Entity("InlandData.Lease", b =>
                {
                    b.Property<int>("LeaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeaseId"));

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int>("SlipID")
                        .HasColumnType("int");

                    b.HasKey("LeaseId");

                    b.HasIndex("CustomerID");

                    b.HasIndex("SlipID");

                    b.ToTable("Leases");

                    b.HasData(
                        new
                        {
                            LeaseId = 1,
                            CustomerID = 1,
                            SlipID = 53
                        },
                        new
                        {
                            LeaseId = 2,
                            CustomerID = 2,
                            SlipID = 18
                        },
                        new
                        {
                            LeaseId = 3,
                            CustomerID = 3,
                            SlipID = 72
                        },
                        new
                        {
                            LeaseId = 4,
                            CustomerID = 4,
                            SlipID = 4
                        },
                        new
                        {
                            LeaseId = 5,
                            CustomerID = 5,
                            SlipID = 64
                        },
                        new
                        {
                            LeaseId = 6,
                            CustomerID = 6,
                            SlipID = 10
                        },
                        new
                        {
                            LeaseId = 7,
                            CustomerID = 7,
                            SlipID = 81
                        },
                        new
                        {
                            LeaseId = 8,
                            CustomerID = 8,
                            SlipID = 30
                        },
                        new
                        {
                            LeaseId = 9,
                            CustomerID = 9,
                            SlipID = 5
                        },
                        new
                        {
                            LeaseId = 10,
                            CustomerID = 10,
                            SlipID = 37
                        },
                        new
                        {
                            LeaseId = 11,
                            CustomerID = 11,
                            SlipID = 56
                        },
                        new
                        {
                            LeaseId = 12,
                            CustomerID = 12,
                            SlipID = 68
                        },
                        new
                        {
                            LeaseId = 13,
                            CustomerID = 13,
                            SlipID = 22
                        },
                        new
                        {
                            LeaseId = 14,
                            CustomerID = 14,
                            SlipID = 89
                        },
                        new
                        {
                            LeaseId = 15,
                            CustomerID = 15,
                            SlipID = 44
                        },
                        new
                        {
                            LeaseId = 16,
                            CustomerID = 16,
                            SlipID = 12
                        },
                        new
                        {
                            LeaseId = 17,
                            CustomerID = 17,
                            SlipID = 79
                        },
                        new
                        {
                            LeaseId = 18,
                            CustomerID = 18,
                            SlipID = 29
                        },
                        new
                        {
                            LeaseId = 19,
                            CustomerID = 19,
                            SlipID = 60
                        },
                        new
                        {
                            LeaseId = 20,
                            CustomerID = 20,
                            SlipID = 14
                        });
                });

            modelBuilder.Entity("InlandData.Slip", b =>
                {
                    b.Property<int>("SlipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SlipId"));

                    b.Property<int>("DockID")
                        .HasColumnType("int");

                    b.Property<decimal>("Length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SlipId");

                    b.HasIndex("DockID");

                    b.ToTable("Slips");

                    b.HasData(
                        new
                        {
                            SlipId = 1,
                            DockID = 2,
                            Length = 20m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 2,
                            DockID = 3,
                            Length = 25m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 3,
                            DockID = 1,
                            Length = 18m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 4,
                            DockID = 3,
                            Length = 22m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 5,
                            DockID = 1,
                            Length = 30m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 6,
                            DockID = 2,
                            Length = 26m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 7,
                            DockID = 1,
                            Length = 21m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 8,
                            DockID = 3,
                            Length = 27m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 9,
                            DockID = 2,
                            Length = 23m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 10,
                            DockID = 1,
                            Length = 29m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 11,
                            DockID = 2,
                            Length = 18m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 12,
                            DockID = 3,
                            Length = 30m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 13,
                            DockID = 1,
                            Length = 22m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 14,
                            DockID = 3,
                            Length = 27m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 15,
                            DockID = 2,
                            Length = 24m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 16,
                            DockID = 1,
                            Length = 26m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 17,
                            DockID = 3,
                            Length = 20m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 18,
                            DockID = 1,
                            Length = 28m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 19,
                            DockID = 2,
                            Length = 23m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 20,
                            DockID = 1,
                            Length = 25m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 21,
                            DockID = 2,
                            Length = 27m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 22,
                            DockID = 3,
                            Length = 21m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 23,
                            DockID = 1,
                            Length = 19m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 24,
                            DockID = 2,
                            Length = 25m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 25,
                            DockID = 3,
                            Length = 24m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 26,
                            DockID = 1,
                            Length = 29m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 27,
                            DockID = 3,
                            Length = 21m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 28,
                            DockID = 1,
                            Length = 22m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 29,
                            DockID = 2,
                            Length = 18m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 30,
                            DockID = 3,
                            Length = 30m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 31,
                            DockID = 2,
                            Length = 26m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 32,
                            DockID = 1,
                            Length = 27m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 33,
                            DockID = 3,
                            Length = 22m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 34,
                            DockID = 1,
                            Length = 23m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 35,
                            DockID = 2,
                            Length = 20m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 36,
                            DockID = 3,
                            Length = 25m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 37,
                            DockID = 1,
                            Length = 28m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 38,
                            DockID = 2,
                            Length = 24m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 39,
                            DockID = 1,
                            Length = 29m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 40,
                            DockID = 3,
                            Length = 22m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 41,
                            DockID = 2,
                            Length = 23m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 42,
                            DockID = 1,
                            Length = 26m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 43,
                            DockID = 3,
                            Length = 27m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 44,
                            DockID = 2,
                            Length = 24m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 45,
                            DockID = 1,
                            Length = 21m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 46,
                            DockID = 2,
                            Length = 22m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 47,
                            DockID = 3,
                            Length = 23m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 48,
                            DockID = 1,
                            Length = 21m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 49,
                            DockID = 2,
                            Length = 25m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 50,
                            DockID = 1,
                            Length = 28m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 51,
                            DockID = 3,
                            Length = 29m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 52,
                            DockID = 2,
                            Length = 24m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 53,
                            DockID = 3,
                            Length = 30m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 54,
                            DockID = 1,
                            Length = 28m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 55,
                            DockID = 2,
                            Length = 29m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 56,
                            DockID = 3,
                            Length = 25m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 57,
                            DockID = 1,
                            Length = 30m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 58,
                            DockID = 3,
                            Length = 24m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 59,
                            DockID = 2,
                            Length = 22m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 60,
                            DockID = 1,
                            Length = 23m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 61,
                            DockID = 3,
                            Length = 18m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 62,
                            DockID = 2,
                            Length = 26m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 63,
                            DockID = 1,
                            Length = 19m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 64,
                            DockID = 3,
                            Length = 30m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 65,
                            DockID = 2,
                            Length = 25m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 66,
                            DockID = 1,
                            Length = 27m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 67,
                            DockID = 3,
                            Length = 19m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 68,
                            DockID = 2,
                            Length = 22m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 69,
                            DockID = 1,
                            Length = 21m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 70,
                            DockID = 3,
                            Length = 30m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 71,
                            DockID = 1,
                            Length = 26m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 72,
                            DockID = 2,
                            Length = 28m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 73,
                            DockID = 3,
                            Length = 30m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 74,
                            DockID = 1,
                            Length = 27m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 75,
                            DockID = 2,
                            Length = 22m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 76,
                            DockID = 3,
                            Length = 23m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 77,
                            DockID = 1,
                            Length = 30m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 78,
                            DockID = 2,
                            Length = 26m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 79,
                            DockID = 3,
                            Length = 20m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 80,
                            DockID = 1,
                            Length = 29m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 81,
                            DockID = 3,
                            Length = 24m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 82,
                            DockID = 2,
                            Length = 22m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 83,
                            DockID = 1,
                            Length = 25m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 84,
                            DockID = 3,
                            Length = 18m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 85,
                            DockID = 2,
                            Length = 21m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 86,
                            DockID = 1,
                            Length = 28m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 87,
                            DockID = 3,
                            Length = 19m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 88,
                            DockID = 2,
                            Length = 27m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 89,
                            DockID = 1,
                            Length = 23m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 90,
                            DockID = 3,
                            Length = 23m,
                            Width = 10m
                        });
                });

            modelBuilder.Entity("InlandData.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "f40156ea-0482-43a5-8c20-4024d1ff3aa9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f08512ba-d1d5-4199-bde3-b51b2fa600b3",
                            CustomerId = 1,
                            Email = "john.smith@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "John",
                            PasswordHash = "AQAAAAIAAYagAAAAEKkyQcuS6j80MezJuavgHE2eItkN5Oony2eoroVzMs0tPNAt+ivYv52YDrQlB0+kWA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4857bc42-c28e-4640-a9fc-4de267bc5aa0",
                            TwoFactorEnabled = false,
                            UserName = "jsmith"
                        },
                        new
                        {
                            Id = "2d6b8a50-203a-4b2c-bbba-5c8f128a027e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e10fba36-ffbc-4ef4-b878-80b6e3b469e1",
                            CustomerId = 2,
                            Email = "emily.johnson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Emily",
                            PasswordHash = "AQAAAAIAAYagAAAAEIt2LJhCShohm60N5DZ3307prcWXf2RNMsA0GZkDDt2/Kjcp7mjmUnFBV9wLKZTA1A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1e05c917-4d8d-46e0-965d-960734ee9158",
                            TwoFactorEnabled = false,
                            UserName = "ejohnson"
                        },
                        new
                        {
                            Id = "b3cbba68-9b96-4146-b98c-68fc0a7bfc0c",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6833b36a-5685-4aa1-a164-acdf2e93e5fa",
                            CustomerId = 3,
                            Email = "david.brown@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "David",
                            PasswordHash = "AQAAAAIAAYagAAAAEIqm5HGsXOC16KEIpPlo1VVIVC5NwImnKjVJFekdG9Fz3NUbcfCobhjRrReNct6ypw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0683f04f-fd8e-44bd-83bc-2cb792cb4ccf",
                            TwoFactorEnabled = false,
                            UserName = "dbrown"
                        },
                        new
                        {
                            Id = "fd9d07f8-88b7-4554-90ca-3c8a72d31cb9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8a4c1458-e3a0-4401-99f8-4196d78b19f3",
                            CustomerId = 4,
                            Email = "jessica.davis@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Jessica",
                            PasswordHash = "AQAAAAIAAYagAAAAEKXSrXzdrkeiKNhFgBSpjHtTDGu+31jGVecWaCNEU+JHZxIILc5BLZXsc4Pn4vASsg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1da9b1c7-51ee-42b7-9b50-3d52ec68d3f0",
                            TwoFactorEnabled = false,
                            UserName = "jdavis"
                        },
                        new
                        {
                            Id = "959b5435-7f99-4d82-bcbc-db9d5cd3bb3c",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b818c26b-9b86-4cc5-8535-d0e985db3d23",
                            CustomerId = 5,
                            Email = "michael.miller@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Michael",
                            PasswordHash = "AQAAAAIAAYagAAAAEEWWTcT3zxJrEePLEKvBoZE+cq32i1UDfXJu75fM+duGZUJilTba6+ufDm2dmRbYtA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1ffc5591-9ea5-434f-9c58-c6989b994299",
                            TwoFactorEnabled = false,
                            UserName = "mmiller"
                        },
                        new
                        {
                            Id = "37c12034-5a3f-4738-b15a-70a4e56f51d9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e2195c9d-f644-4b83-9b8c-8adeecf02ad5",
                            CustomerId = 6,
                            Email = "sarah.wilson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Sarah",
                            PasswordHash = "AQAAAAIAAYagAAAAEGK7y77e6l72G2N9N5/lG1k+zD1E58ioEIlj6z2IYrwjp0BaTHTnZVqnFGf/Z2j3PA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a2edaf8b-121a-46d2-86d0-7d32d854ee5c",
                            TwoFactorEnabled = false,
                            UserName = "swilson"
                        },
                        new
                        {
                            Id = "8c97ac34-d1ed-4347-bd82-7b8d07278d6f",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8c961f24-3bbb-4849-b138-90b9cb462dbd",
                            CustomerId = 7,
                            Email = "daniel.moore@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Daniel",
                            PasswordHash = "AQAAAAIAAYagAAAAEEjU7U2XtGthNDfC/JfNC0J5iJPDOL49FU5slZL1l4gix25RKcpZIv/tqBQqTSsaRQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "beab2b86-a187-4219-8ed0-9509896ec71e",
                            TwoFactorEnabled = false,
                            UserName = "dmoore"
                        },
                        new
                        {
                            Id = "eec2c354-9f94-407d-90d9-c89d4ba62b5b",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ffc3f88f-229b-423c-9098-1cb4ca43f13a",
                            CustomerId = 8,
                            Email = "olivia.taylor@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Olivia",
                            PasswordHash = "AQAAAAIAAYagAAAAEOvycuBuviwQLohF3lxw6E7SH+YbHeDJVrx94ISd9V8Zoc15sj7hR5oSKqT6iWAdng==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "bd694020-fc72-4f8c-96c6-6a9ba3f46c4e",
                            TwoFactorEnabled = false,
                            UserName = "otaylor"
                        },
                        new
                        {
                            Id = "07028c76-a01b-44cd-97b1-b760129b7dda",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0f5f90dd-a49f-4d29-8cb1-8b581037f3f0",
                            CustomerId = 9,
                            Email = "matthew.anderson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Matthew",
                            PasswordHash = "AQAAAAIAAYagAAAAEGMOZUhdqulLZN03Mq9++t2LRQIpja5wy25bDu1YnWyhQWymt46PY5VA3E+D0KSqTA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "98b549d0-ff36-4ba6-9f4d-996e34e72857",
                            TwoFactorEnabled = false,
                            UserName = "manderson"
                        },
                        new
                        {
                            Id = "c9241108-2f43-48a6-82a0-088394386cd4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "28b497bf-675f-45d9-937c-f8abd12f5e17",
                            CustomerId = 10,
                            Email = "sophia.thomas@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Sophia",
                            PasswordHash = "AQAAAAIAAYagAAAAEF0L/Xp4zsm70SX5Vb4ozAoSXV+0n1I3qgkBBx0brJLnPxCSDptAuPl1ycJAOc/8MA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "61d19bb9-b669-48a6-90ce-851099c51f28",
                            TwoFactorEnabled = false,
                            UserName = "sthomas"
                        },
                        new
                        {
                            Id = "caadf696-3b02-4bb7-8e0a-1c4df173092d",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f52d0b25-720f-4831-aeb5-08ebef2cd0d1",
                            CustomerId = 11,
                            Email = "james.jackson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "James",
                            PasswordHash = "AQAAAAIAAYagAAAAEEej9Gz02ET3DxsrHVqF0OfZCu00/JT9HAfnFMBVwHhGfR62glOp9FFJ7tMP6SxYYQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a329f47d-4061-4c83-804e-995b17fda1fa",
                            TwoFactorEnabled = false,
                            UserName = "jjackson"
                        },
                        new
                        {
                            Id = "882f2ef6-9f0b-4646-ab85-0c95753deccb",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f79ddfce-e1c6-46b6-98c1-03aa5e900037",
                            CustomerId = 12,
                            Email = "isabella.white@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Isabella",
                            PasswordHash = "AQAAAAIAAYagAAAAEOa2I86U9xyU5EvNgHhNhMhp4Pr2XpMbL6tCpZQ504HvF1m46YZD8bU6hKHxhm9yLg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6310b4e3-c900-4f55-b79b-50762f9547b4",
                            TwoFactorEnabled = false,
                            UserName = "iwhite"
                        },
                        new
                        {
                            Id = "88c82412-0799-469a-a966-992f000096a5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d922669a-45de-4baf-ac2f-313ef5f97b85",
                            CustomerId = 13,
                            Email = "alexander.harris@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Alexander",
                            PasswordHash = "AQAAAAIAAYagAAAAEF8pRLsPoYXLgq9pTj9kbeUrpec6BHJKOQ3hPnRLiJQLl2XA3+/yDAs+2exQy3r1Xg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "29d8ef72-71f4-40e5-a36f-b60b6d7581d1",
                            TwoFactorEnabled = false,
                            UserName = "aharris"
                        },
                        new
                        {
                            Id = "46b343ca-86b9-41b9-816a-bcf76f6b755a",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "88d44a4d-07be-4b28-928e-7a8a12d5bc94",
                            CustomerId = 14,
                            Email = "ava.martin@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Ava",
                            PasswordHash = "AQAAAAIAAYagAAAAEKpfvk3vfZN0b54iZX1IPBCwzUA23lZADd6EDmjRflYDE5iQSCQ3iZCmH+QgZNFJFw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "976512d2-8c02-475b-8c98-d69a6f00562a",
                            TwoFactorEnabled = false,
                            UserName = "amartin"
                        },
                        new
                        {
                            Id = "645c5dc9-918e-4600-abbc-f0663e0fd031",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2df4e48d-ffba-43f2-80f5-a0cb9fef9279",
                            CustomerId = 15,
                            Email = "ethan.garcia@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Ethan",
                            PasswordHash = "AQAAAAIAAYagAAAAEDVtJs8W45PBhGI3EIyZx5M6tVc/JXYpUq/xu9HTR3nPuMTulxjJXgVzeG7QpOaZ3w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "76519e98-8570-4894-85ef-cc375b38cb9c",
                            TwoFactorEnabled = false,
                            UserName = "egarcia"
                        },
                        new
                        {
                            Id = "5eb8efba-b9dc-4c6e-8b7c-d0fee41964b9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e2f5d1e8-1391-4011-9099-cde282abaf34",
                            CustomerId = 16,
                            Email = "charlotte.lee@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Charlotte",
                            PasswordHash = "AQAAAAIAAYagAAAAECr+1EfexRfJ0lcsgyvY2OXQMxsN3mQyjYg4lZuD6x+dyrBjBLpQEjlGXqWLH9a5JA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2c9984af-3e47-4a96-802c-774df4deb81d",
                            TwoFactorEnabled = false,
                            UserName = "clee"
                        },
                        new
                        {
                            Id = "485910b7-b3a0-44ee-a0ef-e20321028cac",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "76d6dc52-6e99-401c-ad7e-3387801776af",
                            CustomerId = 17,
                            Email = "henry.perez@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Henry",
                            PasswordHash = "AQAAAAIAAYagAAAAENBMSHxFDfFx9o1UFlsagCyOyrVUSJKwrCsFqG9QhTHxUaB5lvUhEzk9McSe2rFFIw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "347959d4-f787-453d-97fc-2f6b68054c29",
                            TwoFactorEnabled = false,
                            UserName = "hperez"
                        },
                        new
                        {
                            Id = "faf6ce04-fba6-481b-b8a3-e3f5a4ab7f7d",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "048960d1-ecf5-4d9b-a071-6360db2aac50",
                            CustomerId = 18,
                            Email = "amelia.martinez@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Amelia",
                            PasswordHash = "AQAAAAIAAYagAAAAEAVyU/YNYsoUIVabvrCKmVW/ATlDotPssq68Apll5RmcwtIZ9gs43Q/748s/MHAcvA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9af8a223-e604-489e-a0f1-6e030e7d3da9",
                            TwoFactorEnabled = false,
                            UserName = "amartinez"
                        },
                        new
                        {
                            Id = "b8580ae9-4f2b-4cdb-b03a-bb03766bead9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "38d332f2-acef-4d97-9620-2732efd4054f",
                            CustomerId = 19,
                            Email = "benjamin.rodriguez@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Benjamin",
                            PasswordHash = "AQAAAAIAAYagAAAAEEHTdTp3SSyA8IEEkJPjlST4SKvDqqBHKLTGQZJAoqgC/tOTjtJG0QI6uHSpeCiScA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1c72a523-a5bb-458a-906a-f4f4d7668dcd",
                            TwoFactorEnabled = false,
                            UserName = "brodriguez"
                        },
                        new
                        {
                            Id = "b3b2e8e1-a5b7-4395-af16-059556823913",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0e1cdb29-cf58-4d5a-bb6d-d0d63dbc378d",
                            CustomerId = 20,
                            Email = "grace.gonzalez@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Grace",
                            PasswordHash = "AQAAAAIAAYagAAAAEKelg+UrrpvDtGTNi88mTBfNZ/jSZyu2bWgdw8TUE3YANWyn5MJbt9mWAHE1N0koDQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d27ccfe6-a644-4c0c-82a1-be08f90513ec",
                            TwoFactorEnabled = false,
                            UserName = "ggonzalez"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("InlandData.Lease", b =>
                {
                    b.HasOne("InlandData.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InlandData.Slip", "Slip")
                        .WithMany()
                        .HasForeignKey("SlipID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Slip");
                });

            modelBuilder.Entity("InlandData.Slip", b =>
                {
                    b.HasOne("InlandData.Dock", "Dock")
                        .WithMany()
                        .HasForeignKey("DockID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dock");
                });

            modelBuilder.Entity("InlandData.User", b =>
                {
                    b.HasOne("InlandData.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("InlandData.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("InlandData.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InlandData.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("InlandData.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
