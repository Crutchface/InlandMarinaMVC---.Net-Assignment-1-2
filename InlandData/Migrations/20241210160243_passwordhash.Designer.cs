// <auto-generated />
using System;
using InlandData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InlandData.Migrations
{
    [DbContext(typeof(InlandContext))]
    [Migration("20241210160243_passwordhash")]
    partial class passwordhash
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InlandData.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            City = "Los Angeles",
                            FirstName = "John",
                            LastName = "Smith",
                            Phone = "3234567890"
                        },
                        new
                        {
                            CustomerId = 2,
                            City = "San Francisco",
                            FirstName = "Emily",
                            LastName = "Johnson",
                            Phone = "4152345678"
                        },
                        new
                        {
                            CustomerId = 3,
                            City = "San Diego",
                            FirstName = "David",
                            LastName = "Brown",
                            Phone = "8581234567"
                        },
                        new
                        {
                            CustomerId = 4,
                            City = "Sacramento",
                            FirstName = "Jessica",
                            LastName = "Davis",
                            Phone = "9162345678"
                        },
                        new
                        {
                            CustomerId = 5,
                            City = "Fresno",
                            FirstName = "Michael",
                            LastName = "Miller",
                            Phone = "5593456789"
                        },
                        new
                        {
                            CustomerId = 6,
                            City = "Phoenix",
                            FirstName = "Sarah",
                            LastName = "Wilson",
                            Phone = "6022345678"
                        },
                        new
                        {
                            CustomerId = 7,
                            City = "Tucson",
                            FirstName = "Daniel",
                            LastName = "Moore",
                            Phone = "5203456789"
                        },
                        new
                        {
                            CustomerId = 8,
                            City = "Mesa",
                            FirstName = "Olivia",
                            LastName = "Taylor",
                            Phone = "4804567890"
                        },
                        new
                        {
                            CustomerId = 9,
                            City = "Chandler",
                            FirstName = "Matthew",
                            LastName = "Anderson",
                            Phone = "4805678901"
                        },
                        new
                        {
                            CustomerId = 10,
                            City = "Scottsdale",
                            FirstName = "Sophia",
                            LastName = "Thomas",
                            Phone = "6026789012"
                        },
                        new
                        {
                            CustomerId = 11,
                            City = "Las Vegas",
                            FirstName = "James",
                            LastName = "Jackson",
                            Phone = "7027890123"
                        },
                        new
                        {
                            CustomerId = 12,
                            City = "Reno",
                            FirstName = "Isabella",
                            LastName = "White",
                            Phone = "7758901234"
                        },
                        new
                        {
                            CustomerId = 13,
                            City = "Henderson",
                            FirstName = "Alexander",
                            LastName = "Harris",
                            Phone = "7029012345"
                        },
                        new
                        {
                            CustomerId = 14,
                            City = "Carson City",
                            FirstName = "Ava",
                            LastName = "Martin",
                            Phone = "7752345678"
                        },
                        new
                        {
                            CustomerId = 15,
                            City = "Elko",
                            FirstName = "Ethan",
                            LastName = "Garcia",
                            Phone = "7023456789"
                        },
                        new
                        {
                            CustomerId = 16,
                            City = "Salt Lake City",
                            FirstName = "Charlotte",
                            LastName = "Lee",
                            Phone = "8012345678"
                        },
                        new
                        {
                            CustomerId = 17,
                            City = "Provo",
                            FirstName = "Henry",
                            LastName = "Perez",
                            Phone = "3853456789"
                        },
                        new
                        {
                            CustomerId = 18,
                            City = "Ogden",
                            FirstName = "Amelia",
                            LastName = "Martinez",
                            Phone = "8014567890"
                        },
                        new
                        {
                            CustomerId = 19,
                            City = "St. George",
                            FirstName = "Benjamin",
                            LastName = "Rodriguez",
                            Phone = "4355678901"
                        },
                        new
                        {
                            CustomerId = 20,
                            City = "West Valley City",
                            FirstName = "Grace",
                            LastName = "Gonzalez",
                            Phone = "3856789012"
                        });
                });

            modelBuilder.Entity("InlandData.Dock", b =>
                {
                    b.Property<int>("DockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DockId"));

                    b.Property<bool>("ElectricalService")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("WaterService")
                        .HasColumnType("bit");

                    b.HasKey("DockId");

                    b.ToTable("Docks");

                    b.HasData(
                        new
                        {
                            DockId = 1,
                            ElectricalService = true,
                            Name = "Seabreeze Cove",
                            WaterService = true
                        },
                        new
                        {
                            DockId = 2,
                            ElectricalService = false,
                            Name = "Sunset Haven",
                            WaterService = true
                        },
                        new
                        {
                            DockId = 3,
                            ElectricalService = false,
                            Name = "Whispering Pines",
                            WaterService = false
                        });
                });

            modelBuilder.Entity("InlandData.Lease", b =>
                {
                    b.Property<int>("LeaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeaseId"));

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int>("SlipID")
                        .HasColumnType("int");

                    b.HasKey("LeaseId");

                    b.HasIndex("CustomerID");

                    b.HasIndex("SlipID");

                    b.ToTable("Leases");

                    b.HasData(
                        new
                        {
                            LeaseId = 1,
                            CustomerID = 1,
                            SlipID = 53
                        },
                        new
                        {
                            LeaseId = 2,
                            CustomerID = 2,
                            SlipID = 18
                        },
                        new
                        {
                            LeaseId = 3,
                            CustomerID = 3,
                            SlipID = 72
                        },
                        new
                        {
                            LeaseId = 4,
                            CustomerID = 4,
                            SlipID = 4
                        },
                        new
                        {
                            LeaseId = 5,
                            CustomerID = 5,
                            SlipID = 64
                        },
                        new
                        {
                            LeaseId = 6,
                            CustomerID = 6,
                            SlipID = 10
                        },
                        new
                        {
                            LeaseId = 7,
                            CustomerID = 7,
                            SlipID = 81
                        },
                        new
                        {
                            LeaseId = 8,
                            CustomerID = 8,
                            SlipID = 30
                        },
                        new
                        {
                            LeaseId = 9,
                            CustomerID = 9,
                            SlipID = 5
                        },
                        new
                        {
                            LeaseId = 10,
                            CustomerID = 10,
                            SlipID = 37
                        },
                        new
                        {
                            LeaseId = 11,
                            CustomerID = 11,
                            SlipID = 56
                        },
                        new
                        {
                            LeaseId = 12,
                            CustomerID = 12,
                            SlipID = 68
                        },
                        new
                        {
                            LeaseId = 13,
                            CustomerID = 13,
                            SlipID = 22
                        },
                        new
                        {
                            LeaseId = 14,
                            CustomerID = 14,
                            SlipID = 89
                        },
                        new
                        {
                            LeaseId = 15,
                            CustomerID = 15,
                            SlipID = 44
                        },
                        new
                        {
                            LeaseId = 16,
                            CustomerID = 16,
                            SlipID = 12
                        },
                        new
                        {
                            LeaseId = 17,
                            CustomerID = 17,
                            SlipID = 79
                        },
                        new
                        {
                            LeaseId = 18,
                            CustomerID = 18,
                            SlipID = 29
                        },
                        new
                        {
                            LeaseId = 19,
                            CustomerID = 19,
                            SlipID = 60
                        },
                        new
                        {
                            LeaseId = 20,
                            CustomerID = 20,
                            SlipID = 14
                        });
                });

            modelBuilder.Entity("InlandData.Slip", b =>
                {
                    b.Property<int>("SlipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SlipId"));

                    b.Property<int>("DockID")
                        .HasColumnType("int");

                    b.Property<decimal>("Length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SlipId");

                    b.HasIndex("DockID");

                    b.ToTable("Slips");

                    b.HasData(
                        new
                        {
                            SlipId = 1,
                            DockID = 2,
                            Length = 20m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 2,
                            DockID = 3,
                            Length = 25m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 3,
                            DockID = 1,
                            Length = 18m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 4,
                            DockID = 3,
                            Length = 22m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 5,
                            DockID = 1,
                            Length = 30m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 6,
                            DockID = 2,
                            Length = 26m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 7,
                            DockID = 1,
                            Length = 21m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 8,
                            DockID = 3,
                            Length = 27m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 9,
                            DockID = 2,
                            Length = 23m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 10,
                            DockID = 1,
                            Length = 29m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 11,
                            DockID = 2,
                            Length = 18m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 12,
                            DockID = 3,
                            Length = 30m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 13,
                            DockID = 1,
                            Length = 22m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 14,
                            DockID = 3,
                            Length = 27m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 15,
                            DockID = 2,
                            Length = 24m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 16,
                            DockID = 1,
                            Length = 26m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 17,
                            DockID = 3,
                            Length = 20m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 18,
                            DockID = 1,
                            Length = 28m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 19,
                            DockID = 2,
                            Length = 23m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 20,
                            DockID = 1,
                            Length = 25m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 21,
                            DockID = 2,
                            Length = 27m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 22,
                            DockID = 3,
                            Length = 21m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 23,
                            DockID = 1,
                            Length = 19m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 24,
                            DockID = 2,
                            Length = 25m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 25,
                            DockID = 3,
                            Length = 24m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 26,
                            DockID = 1,
                            Length = 29m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 27,
                            DockID = 3,
                            Length = 21m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 28,
                            DockID = 1,
                            Length = 22m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 29,
                            DockID = 2,
                            Length = 18m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 30,
                            DockID = 3,
                            Length = 30m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 31,
                            DockID = 2,
                            Length = 26m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 32,
                            DockID = 1,
                            Length = 27m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 33,
                            DockID = 3,
                            Length = 22m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 34,
                            DockID = 1,
                            Length = 23m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 35,
                            DockID = 2,
                            Length = 20m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 36,
                            DockID = 3,
                            Length = 25m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 37,
                            DockID = 1,
                            Length = 28m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 38,
                            DockID = 2,
                            Length = 24m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 39,
                            DockID = 1,
                            Length = 29m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 40,
                            DockID = 3,
                            Length = 22m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 41,
                            DockID = 2,
                            Length = 23m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 42,
                            DockID = 1,
                            Length = 26m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 43,
                            DockID = 3,
                            Length = 27m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 44,
                            DockID = 2,
                            Length = 24m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 45,
                            DockID = 1,
                            Length = 21m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 46,
                            DockID = 2,
                            Length = 22m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 47,
                            DockID = 3,
                            Length = 23m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 48,
                            DockID = 1,
                            Length = 21m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 49,
                            DockID = 2,
                            Length = 25m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 50,
                            DockID = 1,
                            Length = 28m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 51,
                            DockID = 3,
                            Length = 29m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 52,
                            DockID = 2,
                            Length = 24m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 53,
                            DockID = 3,
                            Length = 30m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 54,
                            DockID = 1,
                            Length = 28m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 55,
                            DockID = 2,
                            Length = 29m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 56,
                            DockID = 3,
                            Length = 25m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 57,
                            DockID = 1,
                            Length = 30m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 58,
                            DockID = 3,
                            Length = 24m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 59,
                            DockID = 2,
                            Length = 22m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 60,
                            DockID = 1,
                            Length = 23m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 61,
                            DockID = 3,
                            Length = 18m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 62,
                            DockID = 2,
                            Length = 26m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 63,
                            DockID = 1,
                            Length = 19m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 64,
                            DockID = 3,
                            Length = 30m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 65,
                            DockID = 2,
                            Length = 25m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 66,
                            DockID = 1,
                            Length = 27m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 67,
                            DockID = 3,
                            Length = 19m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 68,
                            DockID = 2,
                            Length = 22m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 69,
                            DockID = 1,
                            Length = 21m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 70,
                            DockID = 3,
                            Length = 30m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 71,
                            DockID = 1,
                            Length = 26m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 72,
                            DockID = 2,
                            Length = 28m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 73,
                            DockID = 3,
                            Length = 30m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 74,
                            DockID = 1,
                            Length = 27m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 75,
                            DockID = 2,
                            Length = 22m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 76,
                            DockID = 3,
                            Length = 23m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 77,
                            DockID = 1,
                            Length = 30m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 78,
                            DockID = 2,
                            Length = 26m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 79,
                            DockID = 3,
                            Length = 20m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 80,
                            DockID = 1,
                            Length = 29m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 81,
                            DockID = 3,
                            Length = 24m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 82,
                            DockID = 2,
                            Length = 22m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 83,
                            DockID = 1,
                            Length = 25m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 84,
                            DockID = 3,
                            Length = 18m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 85,
                            DockID = 2,
                            Length = 21m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 86,
                            DockID = 1,
                            Length = 28m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 87,
                            DockID = 3,
                            Length = 19m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 88,
                            DockID = 2,
                            Length = 27m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 89,
                            DockID = 1,
                            Length = 23m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 90,
                            DockID = 3,
                            Length = 23m,
                            Width = 10m
                        });
                });

            modelBuilder.Entity("InlandData.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "668d8ffa-6837-4970-ace1-618a0f3feaf8",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f415799c-ff9a-4658-a872-2edb8f19d500",
                            CustomerId = 1,
                            Email = "john.smith@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "John",
                            PasswordHash = "AQAAAAIAAYagAAAAEORQDvGy35ac7HFQ6tvbGZCHL1mOh+ejD84yyfzCZLFI0BXKEvShtvyteYZ/M/JfMg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0e68cdc0-a2f9-40fe-80f2-b4a635d35f19",
                            TwoFactorEnabled = false,
                            UserName = "jsmith"
                        },
                        new
                        {
                            Id = "e8009958-3a93-468f-a849-a28150572364",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "16112c77-c553-45a1-8ebe-50c9be9faf5a",
                            CustomerId = 2,
                            Email = "emily.johnson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Emily",
                            PasswordHash = "AQAAAAIAAYagAAAAEL6NM8zKFKTNmz2wptJNtCVS+Og3mbB7QOFUWhlj1ZP2C6OrUuH1/ruOAgJIqeYr/Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "aa8b68f6-fed1-48c1-a1b6-afe17ba75479",
                            TwoFactorEnabled = false,
                            UserName = "ejohnson"
                        },
                        new
                        {
                            Id = "55f5e059-97a3-48a1-819b-4a5701f4912d",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2578fe47-5e0e-41d5-96bd-afbf4016a9cc",
                            CustomerId = 3,
                            Email = "david.brown@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "David",
                            PasswordHash = "AQAAAAIAAYagAAAAEGcuCLGot+Czzg4XbZ/2sQMp+pvjzLG8m4DLWpJ/Pmc+n0Cq9Wgji7ew1wtl8HMbHA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7470a9d1-d333-4311-a2ff-0aa7f308fea1",
                            TwoFactorEnabled = false,
                            UserName = "dbrown"
                        },
                        new
                        {
                            Id = "e9a34fa1-3c77-4c5c-967d-348d26f5bf85",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "453dbac5-a569-41b9-9989-7ed894b04b3c",
                            CustomerId = 4,
                            Email = "jessica.davis@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Jessica",
                            PasswordHash = "AQAAAAIAAYagAAAAEEgKVwAsKedUsjddcs/QmbTsxVgWG3c77BAvUOFQ97P7iKhIwYL2Vm9W+EgIt87AKw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "31c5c9fd-5dd0-4f75-9ae8-4cd7ce1b9a91",
                            TwoFactorEnabled = false,
                            UserName = "jdavis"
                        },
                        new
                        {
                            Id = "08795fa6-e5ae-438d-bf53-5a4a45b7016c",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f267327c-6c14-405e-9a67-c2d92103cb5d",
                            CustomerId = 5,
                            Email = "michael.miller@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Michael",
                            PasswordHash = "AQAAAAIAAYagAAAAEEqbV+yA01ZkP0wF2Rroq4Af0DB3+y8ANe9vrKytsMO1slJ1TSILULV93UfPn/LO2g==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d26ee039-9450-49b0-b16f-ccdd4e0722ce",
                            TwoFactorEnabled = false,
                            UserName = "mmiller"
                        },
                        new
                        {
                            Id = "2327a8cf-c3b0-42e9-b5f1-145b2f7d5183",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5c628c0a-f4ed-4c17-b889-2e80b573eca8",
                            CustomerId = 6,
                            Email = "sarah.wilson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Sarah",
                            PasswordHash = "AQAAAAIAAYagAAAAEAIcFY9cqYbR15l3GUrMO3+wqvUYOpvYX7oI9KfmbEVGCit8ckJdgy7Ik4Zy+WR7EQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7dbe21ff-6c69-49c3-9a2b-6df81a7fdd66",
                            TwoFactorEnabled = false,
                            UserName = "swilson"
                        },
                        new
                        {
                            Id = "edda3054-b347-4f23-9fb6-39ecd06b1bfb",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "58709e6f-1934-40b2-bf8c-8b1901ed0b74",
                            CustomerId = 7,
                            Email = "daniel.moore@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Daniel",
                            PasswordHash = "AQAAAAIAAYagAAAAECKm/67+NDevNE6OqDR9x24YSThcPTzuIGB7R95YyUbeU5chEG67tCuWgK82DiHQ3g==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "adf578e7-a170-44ff-9bdb-915307df46a2",
                            TwoFactorEnabled = false,
                            UserName = "dmoore"
                        },
                        new
                        {
                            Id = "ecae28de-9686-41a4-8353-5496c4224fe7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "38d6aac3-d3da-441b-8780-c7680b1d1d1a",
                            CustomerId = 8,
                            Email = "olivia.taylor@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Olivia",
                            PasswordHash = "AQAAAAIAAYagAAAAEO0b7P4X1aWUZrz+Z2AoGFVMagU/VFP8VSqCyHQTBD9hQsV8EohAB7OfOitE30M9Pg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a8675ca7-9f8c-46c4-9dec-a946461e5161",
                            TwoFactorEnabled = false,
                            UserName = "otaylor"
                        },
                        new
                        {
                            Id = "aad70a27-5e4e-4516-9324-8dac02c618f7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c3c97010-6730-4592-81b9-0ebe8faa106e",
                            CustomerId = 9,
                            Email = "matthew.anderson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Matthew",
                            PasswordHash = "AQAAAAIAAYagAAAAEH7fTi+wmEH55GVG5giPkOa4rbtrs+Aka0fPIA5m9goX6ket6cHoAC8ShXJHmM0Kfw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "842e71c6-f220-45c4-a426-5aa8b6f93bb2",
                            TwoFactorEnabled = false,
                            UserName = "manderson"
                        },
                        new
                        {
                            Id = "ecd0e713-76c4-496c-a08c-997c37e880da",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2f1efd36-e06a-450b-ba75-0e45df1ad49f",
                            CustomerId = 10,
                            Email = "sophia.thomas@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Sophia",
                            PasswordHash = "AQAAAAIAAYagAAAAENyYVdmX6F2nFHacg/hAPg2TL/Jqz6Q3SmLxcWcopE/G3dJPfsQE0T1z9W1QqF9zUQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6aeb0249-038a-4c9c-ade2-f75e6b007a7c",
                            TwoFactorEnabled = false,
                            UserName = "sthomas"
                        },
                        new
                        {
                            Id = "9a418441-fa2d-44f4-89ca-a47b24b35cce",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4834f869-9d47-40d1-95c0-fca687a9c55c",
                            CustomerId = 11,
                            Email = "james.jackson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "James",
                            PasswordHash = "AQAAAAIAAYagAAAAEHMoq60ua8Pi3gYXkDOJW3JkhC0JO75MmVd1FnuZF/bszPOtMJ12YvHUMd3kANllOA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "aa2f494e-2d19-4f0f-b319-6b4eb1088b17",
                            TwoFactorEnabled = false,
                            UserName = "jjackson"
                        },
                        new
                        {
                            Id = "786740e1-690a-4f19-a1b6-d6990c80a3b2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6d7973ef-2d41-4e81-9e22-d3d57f7b123d",
                            CustomerId = 12,
                            Email = "isabella.white@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Isabella",
                            PasswordHash = "AQAAAAIAAYagAAAAEAJWdgiJSdwn+BV7JZj5YekX9yS669mG/lN9f5vtdMoWyQgnJktUd4/6+iAmJYuDTA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "75d51e14-ed93-481c-89fd-5adff1826e5a",
                            TwoFactorEnabled = false,
                            UserName = "iwhite"
                        },
                        new
                        {
                            Id = "e3a27c42-a9dd-438b-b117-8ef2493e3b7f",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6441c280-3d3f-4af0-9bc4-df4a69744d01",
                            CustomerId = 13,
                            Email = "alexander.harris@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Alexander",
                            PasswordHash = "AQAAAAIAAYagAAAAEJ2V3/1C9Wj6m7EO7/RI9JtK2kh+CwnxyV4XK2fXiqCp0BG0LkYa+V1Kn6LfpoJGww==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "554f6514-414e-40a7-94ff-47ba2702d2ff",
                            TwoFactorEnabled = false,
                            UserName = "aharris"
                        },
                        new
                        {
                            Id = "c504379b-8e1c-4443-83e5-f19b8f4fdba2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "384a750c-3380-44fc-8c3f-cc0b48ae8886",
                            CustomerId = 14,
                            Email = "ava.martin@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Ava",
                            PasswordHash = "AQAAAAIAAYagAAAAEFByTygG6GfA3pBcTuuIaKLre3rKDgIG1lKkAQ7u3WOHK812lqHkpIgsPorxtxDMNA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "dcde6787-2c6f-4c88-9dc1-b3b8b5aef49d",
                            TwoFactorEnabled = false,
                            UserName = "amartin"
                        },
                        new
                        {
                            Id = "e7217dfe-1667-44d6-8e11-e829c24dcc81",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8605a2fa-410d-488c-8255-62a42ff3b78e",
                            CustomerId = 15,
                            Email = "ethan.garcia@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Ethan",
                            PasswordHash = "AQAAAAIAAYagAAAAEFSI4VJ8PB0E96vRLOkaILNPG8cOm5CBi1Hd5H0WbSqN7uDHHBwmlYXsLQSp811Prw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "afadc483-0263-484f-ba06-d1cd3e8cc213",
                            TwoFactorEnabled = false,
                            UserName = "egarcia"
                        },
                        new
                        {
                            Id = "286c5c67-0a7f-42cf-a648-39970132204d",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ce154034-52c5-49ac-a31c-a8ede197c9ab",
                            CustomerId = 16,
                            Email = "charlotte.lee@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Charlotte",
                            PasswordHash = "AQAAAAIAAYagAAAAEGcxWWkIW3IOvHMf9khqA9aVXbTKS0nAxLrqRrsz4LKhugGG3BrhWUM5Ho0mE4eOPA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e9280e49-3f6f-4a35-82e8-282981d4ff2e",
                            TwoFactorEnabled = false,
                            UserName = "clee"
                        },
                        new
                        {
                            Id = "1fc678a8-9a11-49fa-8dbe-28e11e35d64a",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2d7db6df-6613-48c7-8ae7-8b62cae0454e",
                            CustomerId = 17,
                            Email = "henry.perez@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Henry",
                            PasswordHash = "AQAAAAIAAYagAAAAEKqgw0z8fGnNTKGfa31K1MjFtYs2Tnk0W1IHuy+2dH1iqPseq0WkSkURWFzc/mzddQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1ea8c2d9-5aa1-4b60-9805-8a54bf5394f6",
                            TwoFactorEnabled = false,
                            UserName = "hperez"
                        },
                        new
                        {
                            Id = "35a7e77a-10d6-4999-9ce8-f0372b1b2d16",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8be007ac-1ddf-4290-9623-64352230b2c3",
                            CustomerId = 18,
                            Email = "amelia.martinez@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Amelia",
                            PasswordHash = "AQAAAAIAAYagAAAAEIHFnTIr2838BKxTw9jTmtUEoGKOLjC68bowWcwyjDFESVNb/zlVG6SW8aSfx2FRmQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ad260aeb-9df7-4934-b9c5-4649574ad332",
                            TwoFactorEnabled = false,
                            UserName = "amartinez"
                        },
                        new
                        {
                            Id = "9ef75725-ffa7-4bc4-8b4e-26581446b14d",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f59a003f-602e-4eed-9e26-5bf7782ee304",
                            CustomerId = 19,
                            Email = "benjamin.rodriguez@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Benjamin",
                            PasswordHash = "AQAAAAIAAYagAAAAEIILdf4p2ZuIXFJKVPlj85ScpkqFkQHDUe+OSGhlVnOZf+S6VAF+RQJLXIzQ6uJNHw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4e823924-86ac-4bed-9c32-9558c4d9cd01",
                            TwoFactorEnabled = false,
                            UserName = "brodriguez"
                        },
                        new
                        {
                            Id = "9b9bf6b2-825a-4e12-9e68-876fd578b738",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "37b4d1c7-aec7-43f9-869b-9bd08e077826",
                            CustomerId = 20,
                            Email = "grace.gonzalez@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Grace",
                            PasswordHash = "AQAAAAIAAYagAAAAEEjUfI5Zn3VAS7FqbaaCgZdZu2wRp7qAC9DOaFC5cJsGr4iMBVuy3JCV6glp7UOlwA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "cdfdd5be-8bcc-4324-8f29-f03f9f31fecf",
                            TwoFactorEnabled = false,
                            UserName = "ggonzalez"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("InlandData.Lease", b =>
                {
                    b.HasOne("InlandData.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InlandData.Slip", "Slip")
                        .WithMany()
                        .HasForeignKey("SlipID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Slip");
                });

            modelBuilder.Entity("InlandData.Slip", b =>
                {
                    b.HasOne("InlandData.Dock", "Dock")
                        .WithMany()
                        .HasForeignKey("DockID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dock");
                });

            modelBuilder.Entity("InlandData.User", b =>
                {
                    b.HasOne("InlandData.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("InlandData.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("InlandData.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InlandData.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("InlandData.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
