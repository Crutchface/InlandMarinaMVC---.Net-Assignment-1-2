// <auto-generated />
using System;
using InlandData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InlandData.Migrations
{
    [DbContext(typeof(InlandContext))]
    [Migration("20241210161056_passwordhash2")]
    partial class passwordhash2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InlandData.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            City = "Los Angeles",
                            FirstName = "John",
                            LastName = "Smith",
                            Phone = "3234567890"
                        },
                        new
                        {
                            CustomerId = 2,
                            City = "San Francisco",
                            FirstName = "Emily",
                            LastName = "Johnson",
                            Phone = "4152345678"
                        },
                        new
                        {
                            CustomerId = 3,
                            City = "San Diego",
                            FirstName = "David",
                            LastName = "Brown",
                            Phone = "8581234567"
                        },
                        new
                        {
                            CustomerId = 4,
                            City = "Sacramento",
                            FirstName = "Jessica",
                            LastName = "Davis",
                            Phone = "9162345678"
                        },
                        new
                        {
                            CustomerId = 5,
                            City = "Fresno",
                            FirstName = "Michael",
                            LastName = "Miller",
                            Phone = "5593456789"
                        },
                        new
                        {
                            CustomerId = 6,
                            City = "Phoenix",
                            FirstName = "Sarah",
                            LastName = "Wilson",
                            Phone = "6022345678"
                        },
                        new
                        {
                            CustomerId = 7,
                            City = "Tucson",
                            FirstName = "Daniel",
                            LastName = "Moore",
                            Phone = "5203456789"
                        },
                        new
                        {
                            CustomerId = 8,
                            City = "Mesa",
                            FirstName = "Olivia",
                            LastName = "Taylor",
                            Phone = "4804567890"
                        },
                        new
                        {
                            CustomerId = 9,
                            City = "Chandler",
                            FirstName = "Matthew",
                            LastName = "Anderson",
                            Phone = "4805678901"
                        },
                        new
                        {
                            CustomerId = 10,
                            City = "Scottsdale",
                            FirstName = "Sophia",
                            LastName = "Thomas",
                            Phone = "6026789012"
                        },
                        new
                        {
                            CustomerId = 11,
                            City = "Las Vegas",
                            FirstName = "James",
                            LastName = "Jackson",
                            Phone = "7027890123"
                        },
                        new
                        {
                            CustomerId = 12,
                            City = "Reno",
                            FirstName = "Isabella",
                            LastName = "White",
                            Phone = "7758901234"
                        },
                        new
                        {
                            CustomerId = 13,
                            City = "Henderson",
                            FirstName = "Alexander",
                            LastName = "Harris",
                            Phone = "7029012345"
                        },
                        new
                        {
                            CustomerId = 14,
                            City = "Carson City",
                            FirstName = "Ava",
                            LastName = "Martin",
                            Phone = "7752345678"
                        },
                        new
                        {
                            CustomerId = 15,
                            City = "Elko",
                            FirstName = "Ethan",
                            LastName = "Garcia",
                            Phone = "7023456789"
                        },
                        new
                        {
                            CustomerId = 16,
                            City = "Salt Lake City",
                            FirstName = "Charlotte",
                            LastName = "Lee",
                            Phone = "8012345678"
                        },
                        new
                        {
                            CustomerId = 17,
                            City = "Provo",
                            FirstName = "Henry",
                            LastName = "Perez",
                            Phone = "3853456789"
                        },
                        new
                        {
                            CustomerId = 18,
                            City = "Ogden",
                            FirstName = "Amelia",
                            LastName = "Martinez",
                            Phone = "8014567890"
                        },
                        new
                        {
                            CustomerId = 19,
                            City = "St. George",
                            FirstName = "Benjamin",
                            LastName = "Rodriguez",
                            Phone = "4355678901"
                        },
                        new
                        {
                            CustomerId = 20,
                            City = "West Valley City",
                            FirstName = "Grace",
                            LastName = "Gonzalez",
                            Phone = "3856789012"
                        });
                });

            modelBuilder.Entity("InlandData.Dock", b =>
                {
                    b.Property<int>("DockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DockId"));

                    b.Property<bool>("ElectricalService")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("WaterService")
                        .HasColumnType("bit");

                    b.HasKey("DockId");

                    b.ToTable("Docks");

                    b.HasData(
                        new
                        {
                            DockId = 1,
                            ElectricalService = true,
                            Name = "Seabreeze Cove",
                            WaterService = true
                        },
                        new
                        {
                            DockId = 2,
                            ElectricalService = false,
                            Name = "Sunset Haven",
                            WaterService = true
                        },
                        new
                        {
                            DockId = 3,
                            ElectricalService = false,
                            Name = "Whispering Pines",
                            WaterService = false
                        });
                });

            modelBuilder.Entity("InlandData.Lease", b =>
                {
                    b.Property<int>("LeaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeaseId"));

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int>("SlipID")
                        .HasColumnType("int");

                    b.HasKey("LeaseId");

                    b.HasIndex("CustomerID");

                    b.HasIndex("SlipID");

                    b.ToTable("Leases");

                    b.HasData(
                        new
                        {
                            LeaseId = 1,
                            CustomerID = 1,
                            SlipID = 53
                        },
                        new
                        {
                            LeaseId = 2,
                            CustomerID = 2,
                            SlipID = 18
                        },
                        new
                        {
                            LeaseId = 3,
                            CustomerID = 3,
                            SlipID = 72
                        },
                        new
                        {
                            LeaseId = 4,
                            CustomerID = 4,
                            SlipID = 4
                        },
                        new
                        {
                            LeaseId = 5,
                            CustomerID = 5,
                            SlipID = 64
                        },
                        new
                        {
                            LeaseId = 6,
                            CustomerID = 6,
                            SlipID = 10
                        },
                        new
                        {
                            LeaseId = 7,
                            CustomerID = 7,
                            SlipID = 81
                        },
                        new
                        {
                            LeaseId = 8,
                            CustomerID = 8,
                            SlipID = 30
                        },
                        new
                        {
                            LeaseId = 9,
                            CustomerID = 9,
                            SlipID = 5
                        },
                        new
                        {
                            LeaseId = 10,
                            CustomerID = 10,
                            SlipID = 37
                        },
                        new
                        {
                            LeaseId = 11,
                            CustomerID = 11,
                            SlipID = 56
                        },
                        new
                        {
                            LeaseId = 12,
                            CustomerID = 12,
                            SlipID = 68
                        },
                        new
                        {
                            LeaseId = 13,
                            CustomerID = 13,
                            SlipID = 22
                        },
                        new
                        {
                            LeaseId = 14,
                            CustomerID = 14,
                            SlipID = 89
                        },
                        new
                        {
                            LeaseId = 15,
                            CustomerID = 15,
                            SlipID = 44
                        },
                        new
                        {
                            LeaseId = 16,
                            CustomerID = 16,
                            SlipID = 12
                        },
                        new
                        {
                            LeaseId = 17,
                            CustomerID = 17,
                            SlipID = 79
                        },
                        new
                        {
                            LeaseId = 18,
                            CustomerID = 18,
                            SlipID = 29
                        },
                        new
                        {
                            LeaseId = 19,
                            CustomerID = 19,
                            SlipID = 60
                        },
                        new
                        {
                            LeaseId = 20,
                            CustomerID = 20,
                            SlipID = 14
                        });
                });

            modelBuilder.Entity("InlandData.Slip", b =>
                {
                    b.Property<int>("SlipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SlipId"));

                    b.Property<int>("DockID")
                        .HasColumnType("int");

                    b.Property<decimal>("Length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SlipId");

                    b.HasIndex("DockID");

                    b.ToTable("Slips");

                    b.HasData(
                        new
                        {
                            SlipId = 1,
                            DockID = 2,
                            Length = 20m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 2,
                            DockID = 3,
                            Length = 25m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 3,
                            DockID = 1,
                            Length = 18m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 4,
                            DockID = 3,
                            Length = 22m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 5,
                            DockID = 1,
                            Length = 30m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 6,
                            DockID = 2,
                            Length = 26m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 7,
                            DockID = 1,
                            Length = 21m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 8,
                            DockID = 3,
                            Length = 27m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 9,
                            DockID = 2,
                            Length = 23m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 10,
                            DockID = 1,
                            Length = 29m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 11,
                            DockID = 2,
                            Length = 18m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 12,
                            DockID = 3,
                            Length = 30m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 13,
                            DockID = 1,
                            Length = 22m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 14,
                            DockID = 3,
                            Length = 27m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 15,
                            DockID = 2,
                            Length = 24m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 16,
                            DockID = 1,
                            Length = 26m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 17,
                            DockID = 3,
                            Length = 20m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 18,
                            DockID = 1,
                            Length = 28m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 19,
                            DockID = 2,
                            Length = 23m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 20,
                            DockID = 1,
                            Length = 25m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 21,
                            DockID = 2,
                            Length = 27m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 22,
                            DockID = 3,
                            Length = 21m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 23,
                            DockID = 1,
                            Length = 19m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 24,
                            DockID = 2,
                            Length = 25m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 25,
                            DockID = 3,
                            Length = 24m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 26,
                            DockID = 1,
                            Length = 29m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 27,
                            DockID = 3,
                            Length = 21m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 28,
                            DockID = 1,
                            Length = 22m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 29,
                            DockID = 2,
                            Length = 18m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 30,
                            DockID = 3,
                            Length = 30m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 31,
                            DockID = 2,
                            Length = 26m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 32,
                            DockID = 1,
                            Length = 27m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 33,
                            DockID = 3,
                            Length = 22m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 34,
                            DockID = 1,
                            Length = 23m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 35,
                            DockID = 2,
                            Length = 20m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 36,
                            DockID = 3,
                            Length = 25m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 37,
                            DockID = 1,
                            Length = 28m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 38,
                            DockID = 2,
                            Length = 24m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 39,
                            DockID = 1,
                            Length = 29m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 40,
                            DockID = 3,
                            Length = 22m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 41,
                            DockID = 2,
                            Length = 23m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 42,
                            DockID = 1,
                            Length = 26m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 43,
                            DockID = 3,
                            Length = 27m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 44,
                            DockID = 2,
                            Length = 24m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 45,
                            DockID = 1,
                            Length = 21m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 46,
                            DockID = 2,
                            Length = 22m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 47,
                            DockID = 3,
                            Length = 23m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 48,
                            DockID = 1,
                            Length = 21m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 49,
                            DockID = 2,
                            Length = 25m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 50,
                            DockID = 1,
                            Length = 28m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 51,
                            DockID = 3,
                            Length = 29m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 52,
                            DockID = 2,
                            Length = 24m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 53,
                            DockID = 3,
                            Length = 30m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 54,
                            DockID = 1,
                            Length = 28m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 55,
                            DockID = 2,
                            Length = 29m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 56,
                            DockID = 3,
                            Length = 25m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 57,
                            DockID = 1,
                            Length = 30m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 58,
                            DockID = 3,
                            Length = 24m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 59,
                            DockID = 2,
                            Length = 22m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 60,
                            DockID = 1,
                            Length = 23m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 61,
                            DockID = 3,
                            Length = 18m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 62,
                            DockID = 2,
                            Length = 26m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 63,
                            DockID = 1,
                            Length = 19m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 64,
                            DockID = 3,
                            Length = 30m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 65,
                            DockID = 2,
                            Length = 25m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 66,
                            DockID = 1,
                            Length = 27m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 67,
                            DockID = 3,
                            Length = 19m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 68,
                            DockID = 2,
                            Length = 22m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 69,
                            DockID = 1,
                            Length = 21m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 70,
                            DockID = 3,
                            Length = 30m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 71,
                            DockID = 1,
                            Length = 26m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 72,
                            DockID = 2,
                            Length = 28m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 73,
                            DockID = 3,
                            Length = 30m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 74,
                            DockID = 1,
                            Length = 27m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 75,
                            DockID = 2,
                            Length = 22m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 76,
                            DockID = 3,
                            Length = 23m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 77,
                            DockID = 1,
                            Length = 30m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 78,
                            DockID = 2,
                            Length = 26m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 79,
                            DockID = 3,
                            Length = 20m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 80,
                            DockID = 1,
                            Length = 29m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 81,
                            DockID = 3,
                            Length = 24m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 82,
                            DockID = 2,
                            Length = 22m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 83,
                            DockID = 1,
                            Length = 25m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 84,
                            DockID = 3,
                            Length = 18m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 85,
                            DockID = 2,
                            Length = 21m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 86,
                            DockID = 1,
                            Length = 28m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 87,
                            DockID = 3,
                            Length = 19m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 88,
                            DockID = 2,
                            Length = 27m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 89,
                            DockID = 1,
                            Length = 23m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 90,
                            DockID = 3,
                            Length = 23m,
                            Width = 10m
                        });
                });

            modelBuilder.Entity("InlandData.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "2888671e-1bc5-42cd-98e3-a1be2fb47383",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "20f7b5da-10d8-4df9-80f4-86edc39b80b7",
                            CustomerId = 1,
                            Email = "john.smith@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "John",
                            PasswordHash = "AQAAAAIAAYagAAAAEOEtNtKU+NtsSNf9QVGdORs4BCwoBIBATb3opwqewgqyQFFakKN6a1Eh3owamxSN8g==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "433b9db7-ffb0-40ce-bfb3-ef411ac15495",
                            TwoFactorEnabled = false,
                            UserName = "jsmith"
                        },
                        new
                        {
                            Id = "4cb0c36a-7800-4c00-be80-3c2df1fe88b2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "197f77bf-9a39-4d6b-b5c6-9df5b89dc25c",
                            CustomerId = 1,
                            Email = "john.smith@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "John",
                            PasswordHash = "AQAAAAIAAYagAAAAEGLAI3EzJc7qi5QzlHUCd/4bUeqAZTPA15eiYdJ//6iRW8h6TZWQ8pVKEf8RTnv2ZA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b3f5c545-d3bc-4556-88fc-3453c412252f",
                            TwoFactorEnabled = false,
                            UserName = "jsmith"
                        },
                        new
                        {
                            Id = "f49ae872-f795-458d-87cf-b459bddeb0b3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "95e61900-d4d2-4d9a-b06a-8e71471d2d98",
                            CustomerId = 2,
                            Email = "emily.johnson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Emily",
                            PasswordHash = "AQAAAAIAAYagAAAAEEhdjYLJd46eW+9d/8zkOdTgOnq9jwciZABPmnt/zgFiVMxBjaiXxupWMRPCsFQPHg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ffe4ed5e-df67-4530-9e70-17d8dd7b075c",
                            TwoFactorEnabled = false,
                            UserName = "ejohnson"
                        },
                        new
                        {
                            Id = "78728e14-9023-4bb2-8f34-558ba9ba5584",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b181e4f6-ebd7-4655-9c1b-e1259a098e85",
                            CustomerId = 3,
                            Email = "david.brown@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "David",
                            PasswordHash = "AQAAAAIAAYagAAAAEERB9uU5CX0HT6ZNctW/v3QyU7i6j5uuwVSKpA5Z8bVkSI/Wn6WdyNGstVGGdlq4lw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "302c25d2-4ea0-436b-a3e7-419f7a336dce",
                            TwoFactorEnabled = false,
                            UserName = "dbrown"
                        },
                        new
                        {
                            Id = "9580653a-4314-4e8a-b217-be9b432775d3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "19b6ae9b-a1eb-49b0-ba43-3ce6ccaf7e0a",
                            CustomerId = 4,
                            Email = "jessica.davis@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Jessica",
                            PasswordHash = "AQAAAAIAAYagAAAAEO3VxHQeu3+myaNe1ogGFpDuh67lu4bMGpWZVnm3CDcSdX4y8/q7ZeJCni0XYWVuPA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "bcdf4bfc-7e3e-42cd-96f2-75ff3778c94d",
                            TwoFactorEnabled = false,
                            UserName = "jdavis"
                        },
                        new
                        {
                            Id = "8fe6e392-ecdb-46cd-bdbc-2ef40e294562",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "875de85d-db7e-4934-bd99-310861a9c321",
                            CustomerId = 5,
                            Email = "michael.miller@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Michael",
                            PasswordHash = "AQAAAAIAAYagAAAAEBMxmlGmrbObLFZ/RW8mwzL62FHofyaU80I3/zYDu0GG9ffCq4YA7ZIijS6a3ZWl5A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b5ea1e3f-76af-4666-9950-f93e3e780557",
                            TwoFactorEnabled = false,
                            UserName = "mmiller"
                        },
                        new
                        {
                            Id = "07277ffe-75c7-45a5-bc48-f7712b76db3f",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "015c2fb5-7944-4dab-84ba-546fd3bd55a4",
                            CustomerId = 6,
                            Email = "sarah.wilson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Sarah",
                            PasswordHash = "AQAAAAIAAYagAAAAEH7v7ZlFMYdjHZ50SlQpOkY/GiSlie2RthagBihfo5Rv3LW2/vBh5hC62QS9lBaR0Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c5353f1c-6fcb-40d3-ab21-fde49778c122",
                            TwoFactorEnabled = false,
                            UserName = "swilson"
                        },
                        new
                        {
                            Id = "c664ff11-9791-4fcc-88a1-e2fea923383c",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c56b3095-f016-42d8-900d-11eb6435070f",
                            CustomerId = 7,
                            Email = "daniel.moore@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Daniel",
                            PasswordHash = "AQAAAAIAAYagAAAAEHwnLgzqPXoaZvZdWIR0SeQEHnE4el6mfCQdnz7sSnRyyKPY3R3PrYDal9djjMAJqQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2bedb80b-d568-40cf-b38c-1b12dd546ad1",
                            TwoFactorEnabled = false,
                            UserName = "dmoore"
                        },
                        new
                        {
                            Id = "566c2017-0bf2-452c-a5f4-8bb7ecb4c016",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "dc1d323e-eb54-4f29-9e5e-0a8256f98956",
                            CustomerId = 8,
                            Email = "olivia.taylor@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Olivia",
                            PasswordHash = "AQAAAAIAAYagAAAAEPy2Yd1f4lHfOVKXbdDkuTpUDDp/D3VhfL9Wyul8iNojtQu9oJxXeOyuF9fs4nCeEA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ef1b3d78-2870-429c-a6e8-733583a750d9",
                            TwoFactorEnabled = false,
                            UserName = "otaylor"
                        },
                        new
                        {
                            Id = "ae433d40-bbbc-497b-82bc-c81637abe490",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2a194981-e455-410f-b3c1-35b2547e8eba",
                            CustomerId = 9,
                            Email = "matthew.anderson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Matthew",
                            PasswordHash = "AQAAAAIAAYagAAAAENI/Oreb/7/EWMg70JGh88XLYckBsb2x8MFQ0Q5M0c5pMA0fbu2EbQcxlZE5N6MPYg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f0284e6d-a28f-4c21-8526-156d368fc9a5",
                            TwoFactorEnabled = false,
                            UserName = "manderson"
                        },
                        new
                        {
                            Id = "3b46bee0-0e27-4494-a468-1ad59caca0f0",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "03c4b410-20a5-4e30-b3e9-ea0a3be87a3a",
                            CustomerId = 10,
                            Email = "sophia.thomas@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Sophia",
                            PasswordHash = "AQAAAAIAAYagAAAAEN7pUm1g3C7O9h3osZqGcR7kelaG/rYMB4HiwU+irzNIlwyV4dhDB9pbMQ7t4GSTEQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5f7cb0b8-9241-491a-aea6-d7e8990f7434",
                            TwoFactorEnabled = false,
                            UserName = "sthomas"
                        },
                        new
                        {
                            Id = "45c61b6a-b470-4f7d-a1ca-38cbffbd6628",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "effd5575-cbdb-4b3a-9b36-d0f24b078548",
                            CustomerId = 11,
                            Email = "james.jackson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "James",
                            PasswordHash = "AQAAAAIAAYagAAAAEMNdfQ2MKsVklA06WcILDn5H0gSrtB8+Lhr0fwGkYl37Gjy9VPuBKUrDmWZQDl0iGw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "007ddc13-8957-4d50-81e1-2e87e63cd213",
                            TwoFactorEnabled = false,
                            UserName = "jjackson"
                        },
                        new
                        {
                            Id = "3b3c5ebb-3092-4ee8-96ba-97d5f4e56054",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b22963ff-ad77-474c-a28b-00015ece556a",
                            CustomerId = 12,
                            Email = "isabella.white@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Isabella",
                            PasswordHash = "AQAAAAIAAYagAAAAECE6EhCeZK2197NZnejYMY92wbZzmO5KYZ+QBxzEonL9gusuzOUgQDkBuOhRMW4p5g==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f479c894-6ffa-4ff2-9f91-c711e0ada72b",
                            TwoFactorEnabled = false,
                            UserName = "iwhite"
                        },
                        new
                        {
                            Id = "c0510461-7c99-4586-bd64-116cb20ac02c",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "77dc26cb-3b31-48df-9b6f-20cd12584304",
                            CustomerId = 13,
                            Email = "alexander.harris@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Alexander",
                            PasswordHash = "AQAAAAIAAYagAAAAEJloHpZaGXNkHf0f97udJB0akGbsEq2X5OQ+F9jQXiF7sSys+f1fDxJ23LnMMm21xQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "db3eb1ee-82c1-42d8-a7b6-0bf0dba417d4",
                            TwoFactorEnabled = false,
                            UserName = "aharris"
                        },
                        new
                        {
                            Id = "a838f00c-70f8-4dec-8efe-83166e4cc91c",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2c628ddb-33eb-42ce-9e62-01cf8d47b84e",
                            CustomerId = 14,
                            Email = "ava.martin@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Ava",
                            PasswordHash = "AQAAAAIAAYagAAAAEPC25g8CRcZzLLYxOwo4WvyeiEXLEjNndn3a6bSiRB2jLHzLAVV4tyxPBl702toiNQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "33c60872-b3a4-490b-b524-bb387cec7bcb",
                            TwoFactorEnabled = false,
                            UserName = "amartin"
                        },
                        new
                        {
                            Id = "ec41baae-0fc0-4537-9175-8949fcc62e4f",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "909ad9d6-94aa-4d27-9388-3db66dc899fc",
                            CustomerId = 15,
                            Email = "ethan.garcia@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Ethan",
                            PasswordHash = "AQAAAAIAAYagAAAAEKIDsWquE0QWLW2waO0p4MlZCbd2HfV3auGAbzImtwapG6/40WfTfM05LS/NKmgO+Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "95cbe0ef-d4fe-4a06-9782-4fc36ac7a2d1",
                            TwoFactorEnabled = false,
                            UserName = "egarcia"
                        },
                        new
                        {
                            Id = "7d029ae0-270a-4766-b92e-0f849a4668d1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0165bc36-3fa5-444a-8622-531b2cb3c10d",
                            CustomerId = 16,
                            Email = "charlotte.lee@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Charlotte",
                            PasswordHash = "AQAAAAIAAYagAAAAEIf182SXje9btubGNaICJpo6R8T/Ju+onjL21XayjNmdyxHCWbfLrPSp5qYSnTTaYA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5b545ef3-6b33-4510-8925-0d8b1de48b40",
                            TwoFactorEnabled = false,
                            UserName = "clee"
                        },
                        new
                        {
                            Id = "bd2fef87-6fb1-4d7f-97e2-bca4e82380bb",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "294a4c27-f2b8-47be-a508-84054c516e2e",
                            CustomerId = 17,
                            Email = "henry.perez@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Henry",
                            PasswordHash = "AQAAAAIAAYagAAAAEL9WrpTPobVgHl8uNqVqUF9sgKMnfnlwTFZKUpkd42h+fGyEwGx5IKQi8342tRFSoA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "83b2cfc5-f610-4412-8a5b-0ae70d7eb3a9",
                            TwoFactorEnabled = false,
                            UserName = "hperez"
                        },
                        new
                        {
                            Id = "570516b6-1ef1-4f68-ae5d-9c401ff7eb67",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "05e7ddc1-4997-4247-ad28-9f1cce901263",
                            CustomerId = 18,
                            Email = "amelia.martinez@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Amelia",
                            PasswordHash = "AQAAAAIAAYagAAAAEIKHxD8fZHMVf63TWbcE8fMyPnqK0KcO7EbT89vbwWDijbcynoAk2JKZRWTr/GQauA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "37ab3f84-f676-494c-8bf0-41cc2c3c726f",
                            TwoFactorEnabled = false,
                            UserName = "amartinez"
                        },
                        new
                        {
                            Id = "c10d4211-5156-4514-894f-906b1c994737",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "972f5941-72e2-4ea7-b8b6-c7972163f86f",
                            CustomerId = 19,
                            Email = "benjamin.rodriguez@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Benjamin",
                            PasswordHash = "AQAAAAIAAYagAAAAEGja9sD1VQ6k0s2YjuVYyjj/6RDakKSQE0zzobztQbuzLv9D2VOyaKP4hWUXPs1vEQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3ea309f5-b57e-494a-b033-a45ab2f50697",
                            TwoFactorEnabled = false,
                            UserName = "brodriguez"
                        },
                        new
                        {
                            Id = "1bcae6a4-720c-4b98-955b-d3ba447293cf",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a26abe4b-dc13-465f-832b-f88fa5bf8a28",
                            CustomerId = 20,
                            Email = "grace.gonzalez@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Grace",
                            PasswordHash = "AQAAAAIAAYagAAAAECfbZxJ1XDIVKkl6yzYTwT0u5Dsp5vv5hsso52X2+CXC7aogy/Gm4kR9DHKdP8oFIg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f4478894-a68c-4553-92d5-7dcc1a6527f5",
                            TwoFactorEnabled = false,
                            UserName = "ggonzalez"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("InlandData.Lease", b =>
                {
                    b.HasOne("InlandData.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InlandData.Slip", "Slip")
                        .WithMany()
                        .HasForeignKey("SlipID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Slip");
                });

            modelBuilder.Entity("InlandData.Slip", b =>
                {
                    b.HasOne("InlandData.Dock", "Dock")
                        .WithMany()
                        .HasForeignKey("DockID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dock");
                });

            modelBuilder.Entity("InlandData.User", b =>
                {
                    b.HasOne("InlandData.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("InlandData.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("InlandData.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InlandData.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("InlandData.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
