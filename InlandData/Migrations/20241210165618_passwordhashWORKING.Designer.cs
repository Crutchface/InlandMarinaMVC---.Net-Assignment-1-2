// <auto-generated />
using System;
using InlandData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InlandData.Migrations
{
    [DbContext(typeof(InlandContext))]
    [Migration("20241210165618_passwordhashWORKING")]
    partial class passwordhashWORKING
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InlandData.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            City = "Los Angeles",
                            FirstName = "John",
                            LastName = "Smith",
                            Phone = "3234567890"
                        },
                        new
                        {
                            CustomerId = 2,
                            City = "San Francisco",
                            FirstName = "Emily",
                            LastName = "Johnson",
                            Phone = "4152345678"
                        },
                        new
                        {
                            CustomerId = 3,
                            City = "San Diego",
                            FirstName = "David",
                            LastName = "Brown",
                            Phone = "8581234567"
                        },
                        new
                        {
                            CustomerId = 4,
                            City = "Sacramento",
                            FirstName = "Jessica",
                            LastName = "Davis",
                            Phone = "9162345678"
                        },
                        new
                        {
                            CustomerId = 5,
                            City = "Fresno",
                            FirstName = "Michael",
                            LastName = "Miller",
                            Phone = "5593456789"
                        },
                        new
                        {
                            CustomerId = 6,
                            City = "Phoenix",
                            FirstName = "Sarah",
                            LastName = "Wilson",
                            Phone = "6022345678"
                        },
                        new
                        {
                            CustomerId = 7,
                            City = "Tucson",
                            FirstName = "Daniel",
                            LastName = "Moore",
                            Phone = "5203456789"
                        },
                        new
                        {
                            CustomerId = 8,
                            City = "Mesa",
                            FirstName = "Olivia",
                            LastName = "Taylor",
                            Phone = "4804567890"
                        },
                        new
                        {
                            CustomerId = 9,
                            City = "Chandler",
                            FirstName = "Matthew",
                            LastName = "Anderson",
                            Phone = "4805678901"
                        },
                        new
                        {
                            CustomerId = 10,
                            City = "Scottsdale",
                            FirstName = "Sophia",
                            LastName = "Thomas",
                            Phone = "6026789012"
                        },
                        new
                        {
                            CustomerId = 11,
                            City = "Las Vegas",
                            FirstName = "James",
                            LastName = "Jackson",
                            Phone = "7027890123"
                        },
                        new
                        {
                            CustomerId = 12,
                            City = "Reno",
                            FirstName = "Isabella",
                            LastName = "White",
                            Phone = "7758901234"
                        },
                        new
                        {
                            CustomerId = 13,
                            City = "Henderson",
                            FirstName = "Alexander",
                            LastName = "Harris",
                            Phone = "7029012345"
                        },
                        new
                        {
                            CustomerId = 14,
                            City = "Carson City",
                            FirstName = "Ava",
                            LastName = "Martin",
                            Phone = "7752345678"
                        },
                        new
                        {
                            CustomerId = 15,
                            City = "Elko",
                            FirstName = "Ethan",
                            LastName = "Garcia",
                            Phone = "7023456789"
                        },
                        new
                        {
                            CustomerId = 16,
                            City = "Salt Lake City",
                            FirstName = "Charlotte",
                            LastName = "Lee",
                            Phone = "8012345678"
                        },
                        new
                        {
                            CustomerId = 17,
                            City = "Provo",
                            FirstName = "Henry",
                            LastName = "Perez",
                            Phone = "3853456789"
                        },
                        new
                        {
                            CustomerId = 18,
                            City = "Ogden",
                            FirstName = "Amelia",
                            LastName = "Martinez",
                            Phone = "8014567890"
                        },
                        new
                        {
                            CustomerId = 19,
                            City = "St. George",
                            FirstName = "Benjamin",
                            LastName = "Rodriguez",
                            Phone = "4355678901"
                        },
                        new
                        {
                            CustomerId = 20,
                            City = "West Valley City",
                            FirstName = "Grace",
                            LastName = "Gonzalez",
                            Phone = "3856789012"
                        });
                });

            modelBuilder.Entity("InlandData.Dock", b =>
                {
                    b.Property<int>("DockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DockId"));

                    b.Property<bool>("ElectricalService")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("WaterService")
                        .HasColumnType("bit");

                    b.HasKey("DockId");

                    b.ToTable("Docks");

                    b.HasData(
                        new
                        {
                            DockId = 1,
                            ElectricalService = true,
                            Name = "Seabreeze Cove",
                            WaterService = true
                        },
                        new
                        {
                            DockId = 2,
                            ElectricalService = false,
                            Name = "Sunset Haven",
                            WaterService = true
                        },
                        new
                        {
                            DockId = 3,
                            ElectricalService = false,
                            Name = "Whispering Pines",
                            WaterService = false
                        });
                });

            modelBuilder.Entity("InlandData.Lease", b =>
                {
                    b.Property<int>("LeaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeaseId"));

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int>("SlipID")
                        .HasColumnType("int");

                    b.HasKey("LeaseId");

                    b.HasIndex("CustomerID");

                    b.HasIndex("SlipID");

                    b.ToTable("Leases");

                    b.HasData(
                        new
                        {
                            LeaseId = 1,
                            CustomerID = 1,
                            SlipID = 53
                        },
                        new
                        {
                            LeaseId = 2,
                            CustomerID = 2,
                            SlipID = 18
                        },
                        new
                        {
                            LeaseId = 3,
                            CustomerID = 3,
                            SlipID = 72
                        },
                        new
                        {
                            LeaseId = 4,
                            CustomerID = 4,
                            SlipID = 4
                        },
                        new
                        {
                            LeaseId = 5,
                            CustomerID = 5,
                            SlipID = 64
                        },
                        new
                        {
                            LeaseId = 6,
                            CustomerID = 6,
                            SlipID = 10
                        },
                        new
                        {
                            LeaseId = 7,
                            CustomerID = 7,
                            SlipID = 81
                        },
                        new
                        {
                            LeaseId = 8,
                            CustomerID = 8,
                            SlipID = 30
                        },
                        new
                        {
                            LeaseId = 9,
                            CustomerID = 9,
                            SlipID = 5
                        },
                        new
                        {
                            LeaseId = 10,
                            CustomerID = 10,
                            SlipID = 37
                        },
                        new
                        {
                            LeaseId = 11,
                            CustomerID = 11,
                            SlipID = 56
                        },
                        new
                        {
                            LeaseId = 12,
                            CustomerID = 12,
                            SlipID = 68
                        },
                        new
                        {
                            LeaseId = 13,
                            CustomerID = 13,
                            SlipID = 22
                        },
                        new
                        {
                            LeaseId = 14,
                            CustomerID = 14,
                            SlipID = 89
                        },
                        new
                        {
                            LeaseId = 15,
                            CustomerID = 15,
                            SlipID = 44
                        },
                        new
                        {
                            LeaseId = 16,
                            CustomerID = 16,
                            SlipID = 12
                        },
                        new
                        {
                            LeaseId = 17,
                            CustomerID = 17,
                            SlipID = 79
                        },
                        new
                        {
                            LeaseId = 18,
                            CustomerID = 18,
                            SlipID = 29
                        },
                        new
                        {
                            LeaseId = 19,
                            CustomerID = 19,
                            SlipID = 60
                        },
                        new
                        {
                            LeaseId = 20,
                            CustomerID = 20,
                            SlipID = 14
                        });
                });

            modelBuilder.Entity("InlandData.Slip", b =>
                {
                    b.Property<int>("SlipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SlipId"));

                    b.Property<int>("DockID")
                        .HasColumnType("int");

                    b.Property<decimal>("Length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SlipId");

                    b.HasIndex("DockID");

                    b.ToTable("Slips");

                    b.HasData(
                        new
                        {
                            SlipId = 1,
                            DockID = 2,
                            Length = 20m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 2,
                            DockID = 3,
                            Length = 25m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 3,
                            DockID = 1,
                            Length = 18m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 4,
                            DockID = 3,
                            Length = 22m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 5,
                            DockID = 1,
                            Length = 30m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 6,
                            DockID = 2,
                            Length = 26m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 7,
                            DockID = 1,
                            Length = 21m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 8,
                            DockID = 3,
                            Length = 27m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 9,
                            DockID = 2,
                            Length = 23m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 10,
                            DockID = 1,
                            Length = 29m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 11,
                            DockID = 2,
                            Length = 18m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 12,
                            DockID = 3,
                            Length = 30m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 13,
                            DockID = 1,
                            Length = 22m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 14,
                            DockID = 3,
                            Length = 27m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 15,
                            DockID = 2,
                            Length = 24m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 16,
                            DockID = 1,
                            Length = 26m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 17,
                            DockID = 3,
                            Length = 20m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 18,
                            DockID = 1,
                            Length = 28m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 19,
                            DockID = 2,
                            Length = 23m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 20,
                            DockID = 1,
                            Length = 25m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 21,
                            DockID = 2,
                            Length = 27m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 22,
                            DockID = 3,
                            Length = 21m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 23,
                            DockID = 1,
                            Length = 19m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 24,
                            DockID = 2,
                            Length = 25m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 25,
                            DockID = 3,
                            Length = 24m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 26,
                            DockID = 1,
                            Length = 29m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 27,
                            DockID = 3,
                            Length = 21m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 28,
                            DockID = 1,
                            Length = 22m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 29,
                            DockID = 2,
                            Length = 18m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 30,
                            DockID = 3,
                            Length = 30m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 31,
                            DockID = 2,
                            Length = 26m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 32,
                            DockID = 1,
                            Length = 27m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 33,
                            DockID = 3,
                            Length = 22m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 34,
                            DockID = 1,
                            Length = 23m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 35,
                            DockID = 2,
                            Length = 20m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 36,
                            DockID = 3,
                            Length = 25m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 37,
                            DockID = 1,
                            Length = 28m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 38,
                            DockID = 2,
                            Length = 24m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 39,
                            DockID = 1,
                            Length = 29m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 40,
                            DockID = 3,
                            Length = 22m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 41,
                            DockID = 2,
                            Length = 23m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 42,
                            DockID = 1,
                            Length = 26m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 43,
                            DockID = 3,
                            Length = 27m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 44,
                            DockID = 2,
                            Length = 24m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 45,
                            DockID = 1,
                            Length = 21m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 46,
                            DockID = 2,
                            Length = 22m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 47,
                            DockID = 3,
                            Length = 23m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 48,
                            DockID = 1,
                            Length = 21m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 49,
                            DockID = 2,
                            Length = 25m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 50,
                            DockID = 1,
                            Length = 28m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 51,
                            DockID = 3,
                            Length = 29m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 52,
                            DockID = 2,
                            Length = 24m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 53,
                            DockID = 3,
                            Length = 30m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 54,
                            DockID = 1,
                            Length = 28m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 55,
                            DockID = 2,
                            Length = 29m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 56,
                            DockID = 3,
                            Length = 25m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 57,
                            DockID = 1,
                            Length = 30m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 58,
                            DockID = 3,
                            Length = 24m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 59,
                            DockID = 2,
                            Length = 22m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 60,
                            DockID = 1,
                            Length = 23m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 61,
                            DockID = 3,
                            Length = 18m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 62,
                            DockID = 2,
                            Length = 26m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 63,
                            DockID = 1,
                            Length = 19m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 64,
                            DockID = 3,
                            Length = 30m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 65,
                            DockID = 2,
                            Length = 25m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 66,
                            DockID = 1,
                            Length = 27m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 67,
                            DockID = 3,
                            Length = 19m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 68,
                            DockID = 2,
                            Length = 22m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 69,
                            DockID = 1,
                            Length = 21m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 70,
                            DockID = 3,
                            Length = 30m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 71,
                            DockID = 1,
                            Length = 26m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 72,
                            DockID = 2,
                            Length = 28m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 73,
                            DockID = 3,
                            Length = 30m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 74,
                            DockID = 1,
                            Length = 27m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 75,
                            DockID = 2,
                            Length = 22m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 76,
                            DockID = 3,
                            Length = 23m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 77,
                            DockID = 1,
                            Length = 30m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 78,
                            DockID = 2,
                            Length = 26m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 79,
                            DockID = 3,
                            Length = 20m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 80,
                            DockID = 1,
                            Length = 29m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 81,
                            DockID = 3,
                            Length = 24m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 82,
                            DockID = 2,
                            Length = 22m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 83,
                            DockID = 1,
                            Length = 25m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 84,
                            DockID = 3,
                            Length = 18m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 85,
                            DockID = 2,
                            Length = 21m,
                            Width = 11m
                        },
                        new
                        {
                            SlipId = 86,
                            DockID = 1,
                            Length = 28m,
                            Width = 12m
                        },
                        new
                        {
                            SlipId = 87,
                            DockID = 3,
                            Length = 19m,
                            Width = 8m
                        },
                        new
                        {
                            SlipId = 88,
                            DockID = 2,
                            Length = 27m,
                            Width = 10m
                        },
                        new
                        {
                            SlipId = 89,
                            DockID = 1,
                            Length = 23m,
                            Width = 9m
                        },
                        new
                        {
                            SlipId = 90,
                            DockID = 3,
                            Length = 23m,
                            Width = 10m
                        });
                });

            modelBuilder.Entity("InlandData.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "4112b632-8ef3-4b20-a7a3-f6b5f1e9242b",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3c62da64-924d-4cc8-b06a-0d123fae61ef",
                            CustomerId = 1,
                            Email = "john.smith@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "John",
                            NormalizedEmail = "JOHN.SMITH@EXAMPLE.COM",
                            NormalizedUserName = "JSMITH",
                            PasswordHash = "AQAAAAIAAYagAAAAEJjHgDbTfcybNwH5w3dLuSyqHhsVWviVT0Y1wB54lwqFBJnDfhiBUGVv3hAulqJyZg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "37401a44-7433-4e98-9d1c-61331951fe58",
                            TwoFactorEnabled = false,
                            UserName = "jsmith"
                        },
                        new
                        {
                            Id = "1a10b869-5e07-419b-bbc4-572a05609c82",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7b9009c3-9ab9-492b-a884-1355962536e8",
                            CustomerId = 2,
                            Email = "emily.johnson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Emily",
                            NormalizedEmail = "EMILY.JOHNSON@EXAMPLE.COM",
                            NormalizedUserName = "EJOHNSON",
                            PasswordHash = "AQAAAAIAAYagAAAAEOMJ75D/ZQBPein7rB2WlqztLIXt0KIy5oLLEB46BHWwyvjpb3YL2pLwj3LcdywRIQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1ab103c3-0ad8-4130-b127-f1db4c9cbc13",
                            TwoFactorEnabled = false,
                            UserName = "ejohnson"
                        },
                        new
                        {
                            Id = "6f58d4e4-88a2-4ded-8a53-1131454091b8",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e6e8df43-4056-4524-b703-eeb73532f42d",
                            CustomerId = 3,
                            Email = "david.brown@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "David",
                            NormalizedEmail = "DAVID.BROWN@EXAMPLE.COM",
                            NormalizedUserName = "DBROWN",
                            PasswordHash = "AQAAAAIAAYagAAAAEJw/IHBLtdFKfU2vawkngG8xea/OHq6hI3jP9QyRSrhdUN24LBbq0FfImj1e2q/znQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "da767232-7551-4605-9c2c-4b1104ea876d",
                            TwoFactorEnabled = false,
                            UserName = "dbrown"
                        },
                        new
                        {
                            Id = "56ca84ad-d7cb-45f9-b1f8-1a59ca18a539",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "04d7f2c6-440c-41f3-8773-23976ba17ad2",
                            CustomerId = 4,
                            Email = "jessica.davis@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Jessica",
                            NormalizedEmail = "JESSICA.DAVIS@EXAMPLE.COM",
                            NormalizedUserName = "JDAVIS",
                            PasswordHash = "AQAAAAIAAYagAAAAEAZ4EB6XALOjWfrYlJH21xCdVoOsHOgYp8LyUGJCT4LrUe3vWBSjAJT/td2mgAX5fQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a58ad333-9a14-4e50-b9aa-562c39cc5ab1",
                            TwoFactorEnabled = false,
                            UserName = "jdavis"
                        },
                        new
                        {
                            Id = "8beb493e-bd3e-4819-b37d-711805cddec8",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c723c01d-b2b0-4460-9a9f-407571f71fa6",
                            CustomerId = 5,
                            Email = "michael.miller@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Michael",
                            NormalizedEmail = "MICHAEL.MILLER@EXAMPLE.COM",
                            NormalizedUserName = "MMILLER",
                            PasswordHash = "AQAAAAIAAYagAAAAEJzXosAFcy8VzbpoKDLcoxotiiiavKmTx7cBTJeo5eOMUfuLdkupR+HO+5UjOPKBPA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0821489b-e959-48f5-b3c7-5cd08b28c5de",
                            TwoFactorEnabled = false,
                            UserName = "mmiller"
                        },
                        new
                        {
                            Id = "673fcf96-9c04-45fb-a7fd-3fe6aa2c95be",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "699d386e-7efc-4937-8f2c-f24ef3c46d69",
                            CustomerId = 6,
                            Email = "sarah.wilson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Sarah",
                            NormalizedEmail = "SARAH.WILSON@EXAMPLE.COM",
                            NormalizedUserName = "SWILSON",
                            PasswordHash = "AQAAAAIAAYagAAAAEPo0fJUN7mlFMCgbGSruJDFhf+JPhQhF7ITp4KrH6jZjllzViIxr7kkLO5sSQUwgzw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "427173fc-74d5-44de-9f01-0aba57526a12",
                            TwoFactorEnabled = false,
                            UserName = "swilson"
                        },
                        new
                        {
                            Id = "09880720-e2a6-41ea-9769-5695ec6e3531",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f20ddd2e-0305-4133-ac72-b1cb4abc92c9",
                            CustomerId = 7,
                            Email = "daniel.moore@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Daniel",
                            NormalizedEmail = "DANIEL.MOORE@EXAMPLE.COM",
                            NormalizedUserName = "DMOORE",
                            PasswordHash = "AQAAAAIAAYagAAAAECXwzgeZzRpP4IVuVfYxETAJa3adsLCcQ3JjkyLBHvO6qKxMpe2NiO+4e8+NfC7PzA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "51e7b09a-f2c3-4290-b808-731b292cef3b",
                            TwoFactorEnabled = false,
                            UserName = "dmoore"
                        },
                        new
                        {
                            Id = "284eddde-05c5-4166-8bb8-ce18722d65d4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "285f07d3-dd4d-4d83-b23f-e712250cfaa0",
                            CustomerId = 8,
                            Email = "olivia.taylor@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Olivia",
                            NormalizedEmail = "OLIVIA.TAYLOR@EXAMPLE.COM",
                            NormalizedUserName = "OTAYLOR",
                            PasswordHash = "AQAAAAIAAYagAAAAEJgqVxlqEna+P1Axkv+0/MWLp+aRbZAWK2CdT79kRBgAdw2xOPLgj2mZra8M4nDEeA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4616768f-9871-4563-b420-d95d1f1cd924",
                            TwoFactorEnabled = false,
                            UserName = "otaylor"
                        },
                        new
                        {
                            Id = "85e74e1f-c541-4377-8139-3dbe31ad2a41",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d768ea17-b5c1-4083-8142-28f2445c3aed",
                            CustomerId = 9,
                            Email = "matthew.anderson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Matthew",
                            NormalizedEmail = "MATTHEW.ANDERSON@EXAMPLE.COM",
                            NormalizedUserName = "MANDERSON",
                            PasswordHash = "AQAAAAIAAYagAAAAEGZhTP5sTlNWlcyR2iagkph4BIIRDw2DqAtNd9P0Jnbxa186dXLrbbubdKtTWPJQkw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "de961959-27fc-4d97-b909-21f2edb2e6fe",
                            TwoFactorEnabled = false,
                            UserName = "manderson"
                        },
                        new
                        {
                            Id = "033232da-53a4-4ed6-a6d1-7258af3945bf",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3040cbe7-c8b3-45f3-93d0-76d53d2e5184",
                            CustomerId = 10,
                            Email = "sophia.thomas@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Sophia",
                            NormalizedEmail = "SOPHIA.THOMAS@EXAMPLE.COM",
                            NormalizedUserName = "STHOMAS",
                            PasswordHash = "AQAAAAIAAYagAAAAECFORr0oM/BccuQHBw8vBzQFRXuQM04x0Resw92EamVxiZm8OdnxjRYge0H3vL0U2w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3aae9e41-e1b1-446f-9faf-91a76abea5b8",
                            TwoFactorEnabled = false,
                            UserName = "sthomas"
                        },
                        new
                        {
                            Id = "16e8180d-333e-43f1-9b2f-e91127368319",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "32d5948f-19fb-49f6-9738-a43c6cacbe3c",
                            CustomerId = 11,
                            Email = "james.jackson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "James",
                            NormalizedEmail = "JAMES.JACKSON@EXAMPLE.COM",
                            NormalizedUserName = "JJACKSON",
                            PasswordHash = "AQAAAAIAAYagAAAAEJA8i+BP/94iYEqSN5ptNj+HBIB3o5eOaZfUEnUTfBAj9IXbG6OYcyBeZKkW2GqhLA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "55f93303-cf45-4784-9c59-8e10efd1347c",
                            TwoFactorEnabled = false,
                            UserName = "jjackson"
                        },
                        new
                        {
                            Id = "fa339531-c611-4e74-b1fe-c5f85dd52a07",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e278c0de-a46a-4a8e-9be6-10b341228e39",
                            CustomerId = 12,
                            Email = "isabella.white@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Isabella",
                            NormalizedEmail = "ISABELLA.WHITE@EXAMPLE.COM",
                            NormalizedUserName = "IWHITE",
                            PasswordHash = "AQAAAAIAAYagAAAAEHKNJQc2dBe608CvuA72fCeo55QN5CDG3pYYFHqpqjQ4VIeLRiiJJnjrrjacFJo/sA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "41efe645-58dc-4c2e-94b7-adc0f2316ded",
                            TwoFactorEnabled = false,
                            UserName = "iwhite"
                        },
                        new
                        {
                            Id = "fb83a918-4380-4a80-aa42-d40362c7dc32",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "03866c2d-58a1-4f2a-a972-07fc005f6de4",
                            CustomerId = 13,
                            Email = "alexander.harris@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Alexander",
                            NormalizedEmail = "ALEXANDER.HARRIS@EXAMPLE.COM",
                            NormalizedUserName = "AHARRIS",
                            PasswordHash = "AQAAAAIAAYagAAAAEEnFkeetMfqZkY2KT98R9ZqlE7t/xY7HBqZEongLYSr9u5kCWqr+9HQx7M/NvWOkkA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6e1ddbc7-d4bf-4349-87b9-921911ea8aef",
                            TwoFactorEnabled = false,
                            UserName = "aharris"
                        },
                        new
                        {
                            Id = "8f19fe98-7536-4570-9f94-52cf3dc20bb2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "dc6a2e8a-2915-4106-9a32-1c8c2f709a97",
                            CustomerId = 14,
                            Email = "ava.martin@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Ava",
                            NormalizedEmail = "AVA.MARTIN@EXAMPLE.COM",
                            NormalizedUserName = "AMARTIN",
                            PasswordHash = "AQAAAAIAAYagAAAAEKyBKfSry13Idw9dTeYeqQzcQYe/fEI36Fy57k0WRlYnb+Z3Ny7QKMLwZT19wBEAmg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "608f564e-9d58-4ed4-9d5f-a37407f071cd",
                            TwoFactorEnabled = false,
                            UserName = "amartin"
                        },
                        new
                        {
                            Id = "c07b4d5b-b43a-457b-96f4-a92be7915783",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2ddd4859-a080-49f1-8b43-9fcaa2ffb906",
                            CustomerId = 15,
                            Email = "ethan.garcia@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Ethan",
                            NormalizedEmail = "ETHAN.GARCIA@EXAMPLE.COM",
                            NormalizedUserName = "EGARCIA",
                            PasswordHash = "AQAAAAIAAYagAAAAELGFGC1ZoMwU3QZxFIhKjmw+wfVxyZAZYkRnPJuU1hPxyGGTWh9LmSE0eGG8SPEEXg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "de235558-c340-455e-b36f-694a9b329a09",
                            TwoFactorEnabled = false,
                            UserName = "egarcia"
                        },
                        new
                        {
                            Id = "c820326d-adfb-4af1-be2a-794b563e762b",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "71f7d61c-fc92-4b26-8a2f-d096c01b2c9e",
                            CustomerId = 16,
                            Email = "charlotte.lee@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Charlotte",
                            NormalizedEmail = "CHARLOTTE.LEE@EXAMPLE.COM",
                            NormalizedUserName = "CLEE",
                            PasswordHash = "AQAAAAIAAYagAAAAEINCDMwDsmsp4ftNEO0HEjwXr3zXSi1dUIvL2GMiSidwx4oMoy9Ap+CDTX6ST7ehow==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "14a38108-66aa-47df-b382-af5b37e68a3e",
                            TwoFactorEnabled = false,
                            UserName = "clee"
                        },
                        new
                        {
                            Id = "e12fab42-ae1b-4ad9-80d9-eb8d6ef4febd",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "97f9a6f7-8f89-4b79-aeae-1155d73a1077",
                            CustomerId = 17,
                            Email = "henry.perez@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Henry",
                            NormalizedEmail = "HENRY.PEREZ@EXAMPLE.COM",
                            NormalizedUserName = "HPEREZ",
                            PasswordHash = "AQAAAAIAAYagAAAAEBgAszzG871MPOqwUkIOcg8YQGZFTQTv0+4BpBOtZk0BjZ5AEChPvE51+uLfGGgkAQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c51f8b43-efff-4444-baf6-abab4fab33fd",
                            TwoFactorEnabled = false,
                            UserName = "hperez"
                        },
                        new
                        {
                            Id = "767b3711-2f2a-4403-830f-329e515e23d3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8bb30c1b-7bd3-4702-9e30-1f989c51958c",
                            CustomerId = 18,
                            Email = "amelia.martinez@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Amelia",
                            NormalizedEmail = "AMELIA.MARTINEZ@EXAMPLE.COM",
                            NormalizedUserName = "AMARTINEZ",
                            PasswordHash = "AQAAAAIAAYagAAAAEH6dn48GHStPm0ePv54NpZlgqip+EiHlwsgHtUkTFnKcFSL91ijsJ3RavrBwA1K+1g==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "bd9ce58b-2057-4722-b3c9-3a94e2c8c97a",
                            TwoFactorEnabled = false,
                            UserName = "amartinez"
                        },
                        new
                        {
                            Id = "ad1eb3c9-c4e2-4ec7-86e2-e99137cfb798",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3b2b6de7-e810-491f-9179-acd04b1a078d",
                            CustomerId = 19,
                            Email = "benjamin.rodriguez@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Benjamin",
                            NormalizedEmail = "BENJAMIN.RODRIGUEZ@EXAMPLE.COM",
                            NormalizedUserName = "BRODRIGUEZ",
                            PasswordHash = "AQAAAAIAAYagAAAAEG8k0VwElBp/7fqTIEa/Ftc8CqbS7P8efQSGQy0JLAVxuXnpFWQIpdrG2l9QxnNHrw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ff10934f-4cde-41be-bdec-6d94457d846a",
                            TwoFactorEnabled = false,
                            UserName = "brodriguez"
                        },
                        new
                        {
                            Id = "7be9bbcf-904b-44f0-aa14-36a8a2b28d92",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d3876f22-301f-40e7-901b-4a901f79ff98",
                            CustomerId = 20,
                            Email = "grace.gonzalez@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Grace",
                            NormalizedEmail = "GRACE.GONZALEZ@EXAMPLE.COM",
                            NormalizedUserName = "GGONZALEZ",
                            PasswordHash = "AQAAAAIAAYagAAAAEIG+0ILWQQ0WezQLfeJx7oCwJLwvS+knT8SVyv1aZ2vkm3ad70YE1zQPmMC6vhUwfg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b7f504cf-a4c6-4c68-8b9d-60e35ef067d4",
                            TwoFactorEnabled = false,
                            UserName = "ggonzalez"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("InlandData.Lease", b =>
                {
                    b.HasOne("InlandData.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InlandData.Slip", "Slip")
                        .WithMany()
                        .HasForeignKey("SlipID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Slip");
                });

            modelBuilder.Entity("InlandData.Slip", b =>
                {
                    b.HasOne("InlandData.Dock", "Dock")
                        .WithMany()
                        .HasForeignKey("DockID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dock");
                });

            modelBuilder.Entity("InlandData.User", b =>
                {
                    b.HasOne("InlandData.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("InlandData.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("InlandData.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InlandData.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("InlandData.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
